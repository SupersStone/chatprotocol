// Copyright Â© 2023 OpenIM open source community. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: chat/chat.proto

package chat

import (
	common "github.com/SupersStone/chatprotocol/common"
	sdkws "github.com/SupersStone/new-protocol/sdkws"
	wrapperspb "github.com/SupersStone/new-protocol/wrapperspb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserIdentity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	AreaCode      string                 `protobuf:"bytes,2,opt,name=areaCode,proto3" json:"areaCode,omitempty"`
	PhoneNumber   string                 `protobuf:"bytes,3,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	DeviceID      string                 `protobuf:"bytes,4,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	Platform      int32                  `protobuf:"varint,5,opt,name=platform,proto3" json:"platform,omitempty"`
	Account       string                 `protobuf:"bytes,6,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserIdentity) Reset() {
	*x = UserIdentity{}
	mi := &file_chat_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIdentity) ProtoMessage() {}

func (x *UserIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIdentity.ProtoReflect.Descriptor instead.
func (*UserIdentity) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{0}
}

func (x *UserIdentity) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserIdentity) GetAreaCode() string {
	if x != nil {
		return x.AreaCode
	}
	return ""
}

func (x *UserIdentity) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *UserIdentity) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *UserIdentity) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *UserIdentity) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type UpdateUserInfoReq struct {
	state            protoimpl.MessageState  `protogen:"open.v1"`
	UserID           string                  `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Account          *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	PhoneNumber      *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	AreaCode         *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=areaCode,proto3" json:"areaCode,omitempty"`
	Email            *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Nickname         *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname,omitempty"`
	FaceURL          *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=faceURL,proto3" json:"faceURL,omitempty"`
	Gender           *wrapperspb.Int32Value  `protobuf:"bytes,8,opt,name=gender,proto3" json:"gender,omitempty"`
	Level            *wrapperspb.Int32Value  `protobuf:"bytes,9,opt,name=level,proto3" json:"level,omitempty"`
	Birth            *wrapperspb.Int64Value  `protobuf:"bytes,10,opt,name=birth,proto3" json:"birth,omitempty"`
	AllowAddFriend   *wrapperspb.Int32Value  `protobuf:"bytes,11,opt,name=allowAddFriend,proto3" json:"allowAddFriend,omitempty"`
	AllowBeep        *wrapperspb.Int32Value  `protobuf:"bytes,12,opt,name=allowBeep,proto3" json:"allowBeep,omitempty"`
	AllowVibration   *wrapperspb.Int32Value  `protobuf:"bytes,13,opt,name=allowVibration,proto3" json:"allowVibration,omitempty"`
	GlobalRecvMsgOpt *wrapperspb.Int32Value  `protobuf:"bytes,14,opt,name=globalRecvMsgOpt,proto3" json:"globalRecvMsgOpt,omitempty"`
	RegisterType     *wrapperspb.Int32Value  `protobuf:"bytes,15,opt,name=RegisterType,proto3" json:"RegisterType,omitempty"`
	Name             *wrapperspb.StringValue `protobuf:"bytes,16,opt,name=name,proto3" json:"name,omitempty"`
	Surname          *wrapperspb.StringValue `protobuf:"bytes,17,opt,name=surname,proto3" json:"surname,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateUserInfoReq) Reset() {
	*x = UpdateUserInfoReq{}
	mi := &file_chat_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfoReq) ProtoMessage() {}

func (x *UpdateUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfoReq.ProtoReflect.Descriptor instead.
func (*UpdateUserInfoReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateUserInfoReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UpdateUserInfoReq) GetAccount() *wrapperspb.StringValue {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *UpdateUserInfoReq) GetPhoneNumber() *wrapperspb.StringValue {
	if x != nil {
		return x.PhoneNumber
	}
	return nil
}

func (x *UpdateUserInfoReq) GetAreaCode() *wrapperspb.StringValue {
	if x != nil {
		return x.AreaCode
	}
	return nil
}

func (x *UpdateUserInfoReq) GetEmail() *wrapperspb.StringValue {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *UpdateUserInfoReq) GetNickname() *wrapperspb.StringValue {
	if x != nil {
		return x.Nickname
	}
	return nil
}

func (x *UpdateUserInfoReq) GetFaceURL() *wrapperspb.StringValue {
	if x != nil {
		return x.FaceURL
	}
	return nil
}

func (x *UpdateUserInfoReq) GetGender() *wrapperspb.Int32Value {
	if x != nil {
		return x.Gender
	}
	return nil
}

func (x *UpdateUserInfoReq) GetLevel() *wrapperspb.Int32Value {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *UpdateUserInfoReq) GetBirth() *wrapperspb.Int64Value {
	if x != nil {
		return x.Birth
	}
	return nil
}

func (x *UpdateUserInfoReq) GetAllowAddFriend() *wrapperspb.Int32Value {
	if x != nil {
		return x.AllowAddFriend
	}
	return nil
}

func (x *UpdateUserInfoReq) GetAllowBeep() *wrapperspb.Int32Value {
	if x != nil {
		return x.AllowBeep
	}
	return nil
}

func (x *UpdateUserInfoReq) GetAllowVibration() *wrapperspb.Int32Value {
	if x != nil {
		return x.AllowVibration
	}
	return nil
}

func (x *UpdateUserInfoReq) GetGlobalRecvMsgOpt() *wrapperspb.Int32Value {
	if x != nil {
		return x.GlobalRecvMsgOpt
	}
	return nil
}

func (x *UpdateUserInfoReq) GetRegisterType() *wrapperspb.Int32Value {
	if x != nil {
		return x.RegisterType
	}
	return nil
}

func (x *UpdateUserInfoReq) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *UpdateUserInfoReq) GetSurname() *wrapperspb.StringValue {
	if x != nil {
		return x.Surname
	}
	return nil
}

type UpdateUserInfoResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FaceUrl       string                 `protobuf:"bytes,1,opt,name=faceUrl,proto3" json:"faceUrl,omitempty"`
	NickName      string                 `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserInfoResp) Reset() {
	*x = UpdateUserInfoResp{}
	mi := &file_chat_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfoResp) ProtoMessage() {}

func (x *UpdateUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfoResp.ProtoReflect.Descriptor instead.
func (*UpdateUserInfoResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateUserInfoResp) GetFaceUrl() string {
	if x != nil {
		return x.FaceUrl
	}
	return ""
}

func (x *UpdateUserInfoResp) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

type DownloadLinkReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadLinkReq) Reset() {
	*x = DownloadLinkReq{}
	mi := &file_chat_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadLinkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadLinkReq) ProtoMessage() {}

func (x *DownloadLinkReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadLinkReq.ProtoReflect.Descriptor instead.
func (*DownloadLinkReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{3}
}

func (x *DownloadLinkReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type FindUserPublicInfoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIDs       []string               `protobuf:"bytes,1,rep,name=userIDs,proto3" json:"userIDs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindUserPublicInfoReq) Reset() {
	*x = FindUserPublicInfoReq{}
	mi := &file_chat_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindUserPublicInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserPublicInfoReq) ProtoMessage() {}

func (x *FindUserPublicInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserPublicInfoReq.ProtoReflect.Descriptor instead.
func (*FindUserPublicInfoReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{4}
}

func (x *FindUserPublicInfoReq) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

type FindUserPublicInfoResp struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Users         []*common.UserPublicInfo `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindUserPublicInfoResp) Reset() {
	*x = FindUserPublicInfoResp{}
	mi := &file_chat_chat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindUserPublicInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserPublicInfoResp) ProtoMessage() {}

func (x *FindUserPublicInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserPublicInfoResp.ProtoReflect.Descriptor instead.
func (*FindUserPublicInfoResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{5}
}

func (x *FindUserPublicInfoResp) GetUsers() []*common.UserPublicInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

type SearchUserPublicInfoReq struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Keyword       string                   `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Pagination    *sdkws.RequestPagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Genders       int32                    `protobuf:"varint,3,opt,name=genders,proto3" json:"genders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchUserPublicInfoReq) Reset() {
	*x = SearchUserPublicInfoReq{}
	mi := &file_chat_chat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUserPublicInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserPublicInfoReq) ProtoMessage() {}

func (x *SearchUserPublicInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserPublicInfoReq.ProtoReflect.Descriptor instead.
func (*SearchUserPublicInfoReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{6}
}

func (x *SearchUserPublicInfoReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchUserPublicInfoReq) GetPagination() *sdkws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SearchUserPublicInfoReq) GetGenders() int32 {
	if x != nil {
		return x.Genders
	}
	return 0
}

type SearchUserPublicInfoResp struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Total         uint32                   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Users         []*common.UserPublicInfo `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchUserPublicInfoResp) Reset() {
	*x = SearchUserPublicInfoResp{}
	mi := &file_chat_chat_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUserPublicInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserPublicInfoResp) ProtoMessage() {}

func (x *SearchUserPublicInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserPublicInfoResp.ProtoReflect.Descriptor instead.
func (*SearchUserPublicInfoResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{7}
}

func (x *SearchUserPublicInfoResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchUserPublicInfoResp) GetUsers() []*common.UserPublicInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

type FindUserFullInfoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIDs       []string               `protobuf:"bytes,1,rep,name=userIDs,proto3" json:"userIDs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindUserFullInfoReq) Reset() {
	*x = FindUserFullInfoReq{}
	mi := &file_chat_chat_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindUserFullInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserFullInfoReq) ProtoMessage() {}

func (x *FindUserFullInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserFullInfoReq.ProtoReflect.Descriptor instead.
func (*FindUserFullInfoReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{8}
}

func (x *FindUserFullInfoReq) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

type FindUserFullInfoResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*common.UserFullInfo `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindUserFullInfoResp) Reset() {
	*x = FindUserFullInfoResp{}
	mi := &file_chat_chat_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindUserFullInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserFullInfoResp) ProtoMessage() {}

func (x *FindUserFullInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserFullInfoResp.ProtoReflect.Descriptor instead.
func (*FindUserFullInfoResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{9}
}

func (x *FindUserFullInfoResp) GetUsers() []*common.UserFullInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

type SendVerifyCodeReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UsedFor        int32                  `protobuf:"varint,1,opt,name=usedFor,proto3" json:"usedFor,omitempty"`
	Ip             string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	InvitationCode string                 `protobuf:"bytes,3,opt,name=invitationCode,proto3" json:"invitationCode,omitempty"`
	DeviceID       string                 `protobuf:"bytes,4,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	Platform       int32                  `protobuf:"varint,5,opt,name=platform,proto3" json:"platform,omitempty"`
	AreaCode       string                 `protobuf:"bytes,6,opt,name=areaCode,proto3" json:"areaCode,omitempty"`
	PhoneNumber    string                 `protobuf:"bytes,7,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Email          string                 `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SendVerifyCodeReq) Reset() {
	*x = SendVerifyCodeReq{}
	mi := &file_chat_chat_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendVerifyCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendVerifyCodeReq) ProtoMessage() {}

func (x *SendVerifyCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendVerifyCodeReq.ProtoReflect.Descriptor instead.
func (*SendVerifyCodeReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{10}
}

func (x *SendVerifyCodeReq) GetUsedFor() int32 {
	if x != nil {
		return x.UsedFor
	}
	return 0
}

func (x *SendVerifyCodeReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *SendVerifyCodeReq) GetInvitationCode() string {
	if x != nil {
		return x.InvitationCode
	}
	return ""
}

func (x *SendVerifyCodeReq) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *SendVerifyCodeReq) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *SendVerifyCodeReq) GetAreaCode() string {
	if x != nil {
		return x.AreaCode
	}
	return ""
}

func (x *SendVerifyCodeReq) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *SendVerifyCodeReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type SendVerifyCodeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendVerifyCodeResp) Reset() {
	*x = SendVerifyCodeResp{}
	mi := &file_chat_chat_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendVerifyCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendVerifyCodeResp) ProtoMessage() {}

func (x *SendVerifyCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendVerifyCodeResp.ProtoReflect.Descriptor instead.
func (*SendVerifyCodeResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{11}
}

type VerifyCodeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AreaCode      string                 `protobuf:"bytes,1,opt,name=areaCode,proto3" json:"areaCode,omitempty"`
	PhoneNumber   string                 `protobuf:"bytes,2,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	VerifyCode    string                 `protobuf:"bytes,3,opt,name=verifyCode,proto3" json:"verifyCode,omitempty"`
	Email         string                 `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyCodeReq) Reset() {
	*x = VerifyCodeReq{}
	mi := &file_chat_chat_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCodeReq) ProtoMessage() {}

func (x *VerifyCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCodeReq.ProtoReflect.Descriptor instead.
func (*VerifyCodeReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{12}
}

func (x *VerifyCodeReq) GetAreaCode() string {
	if x != nil {
		return x.AreaCode
	}
	return ""
}

func (x *VerifyCodeReq) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *VerifyCodeReq) GetVerifyCode() string {
	if x != nil {
		return x.VerifyCode
	}
	return ""
}

func (x *VerifyCodeReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type VerifyCodeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyCodeResp) Reset() {
	*x = VerifyCodeResp{}
	mi := &file_chat_chat_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCodeResp) ProtoMessage() {}

func (x *VerifyCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCodeResp.ProtoReflect.Descriptor instead.
func (*VerifyCodeResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{13}
}

type RegisterUserInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Nickname      string                 `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	FaceURL       string                 `protobuf:"bytes,3,opt,name=faceURL,proto3" json:"faceURL,omitempty"`
	Birth         int64                  `protobuf:"varint,4,opt,name=birth,proto3" json:"birth,omitempty"`
	Gender        int32                  `protobuf:"varint,5,opt,name=gender,proto3" json:"gender,omitempty"`
	AreaCode      string                 `protobuf:"bytes,6,opt,name=areaCode,proto3" json:"areaCode,omitempty"`
	PhoneNumber   string                 `protobuf:"bytes,7,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Email         string                 `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	Account       string                 `protobuf:"bytes,9,opt,name=account,proto3" json:"account,omitempty"`
	Password      string                 `protobuf:"bytes,10,opt,name=password,proto3" json:"password,omitempty"`
	RegisterType  int32                  `protobuf:"varint,11,opt,name=RegisterType,proto3" json:"RegisterType,omitempty"`
	PublicKey     string                 `protobuf:"bytes,12,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Address       string                 `protobuf:"bytes,13,opt,name=address,proto3" json:"address,omitempty"`
	Surname       string                 `protobuf:"bytes,14,opt,name=surname,proto3" json:"surname,omitempty"`
	Name          string                 `protobuf:"bytes,15,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterUserInfo) Reset() {
	*x = RegisterUserInfo{}
	mi := &file_chat_chat_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserInfo) ProtoMessage() {}

func (x *RegisterUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserInfo.ProtoReflect.Descriptor instead.
func (*RegisterUserInfo) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{14}
}

func (x *RegisterUserInfo) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *RegisterUserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *RegisterUserInfo) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *RegisterUserInfo) GetBirth() int64 {
	if x != nil {
		return x.Birth
	}
	return 0
}

func (x *RegisterUserInfo) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *RegisterUserInfo) GetAreaCode() string {
	if x != nil {
		return x.AreaCode
	}
	return ""
}

func (x *RegisterUserInfo) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *RegisterUserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RegisterUserInfo) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *RegisterUserInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegisterUserInfo) GetRegisterType() int32 {
	if x != nil {
		return x.RegisterType
	}
	return 0
}

func (x *RegisterUserInfo) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *RegisterUserInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RegisterUserInfo) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *RegisterUserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RegisterUserReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	InvitationCode string                 `protobuf:"bytes,1,opt,name=invitationCode,proto3" json:"invitationCode,omitempty"`
	VerifyCode     string                 `protobuf:"bytes,2,opt,name=verifyCode,proto3" json:"verifyCode,omitempty"`
	Ip             string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	DeviceID       string                 `protobuf:"bytes,4,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	Platform       int32                  `protobuf:"varint,5,opt,name=platform,proto3" json:"platform,omitempty"`
	AutoLogin      bool                   `protobuf:"varint,6,opt,name=autoLogin,proto3" json:"autoLogin,omitempty"`
	User           *RegisterUserInfo      `protobuf:"bytes,7,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RegisterUserReq) Reset() {
	*x = RegisterUserReq{}
	mi := &file_chat_chat_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserReq) ProtoMessage() {}

func (x *RegisterUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserReq.ProtoReflect.Descriptor instead.
func (*RegisterUserReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{15}
}

func (x *RegisterUserReq) GetInvitationCode() string {
	if x != nil {
		return x.InvitationCode
	}
	return ""
}

func (x *RegisterUserReq) GetVerifyCode() string {
	if x != nil {
		return x.VerifyCode
	}
	return ""
}

func (x *RegisterUserReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *RegisterUserReq) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *RegisterUserReq) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *RegisterUserReq) GetAutoLogin() bool {
	if x != nil {
		return x.AutoLogin
	}
	return false
}

func (x *RegisterUserReq) GetUser() *RegisterUserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

type RegisterUserResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ChatToken     string                 `protobuf:"bytes,3,opt,name=chatToken,proto3" json:"chatToken,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterUserResp) Reset() {
	*x = RegisterUserResp{}
	mi := &file_chat_chat_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserResp) ProtoMessage() {}

func (x *RegisterUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserResp.ProtoReflect.Descriptor instead.
func (*RegisterUserResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{16}
}

func (x *RegisterUserResp) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *RegisterUserResp) GetChatToken() string {
	if x != nil {
		return x.ChatToken
	}
	return ""
}

type AddUserAccountReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	DeviceID      string                 `protobuf:"bytes,2,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	Platform      int32                  `protobuf:"varint,3,opt,name=platform,proto3" json:"platform,omitempty"`
	User          *RegisterUserInfo      `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddUserAccountReq) Reset() {
	*x = AddUserAccountReq{}
	mi := &file_chat_chat_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddUserAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserAccountReq) ProtoMessage() {}

func (x *AddUserAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserAccountReq.ProtoReflect.Descriptor instead.
func (*AddUserAccountReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{17}
}

func (x *AddUserAccountReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *AddUserAccountReq) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *AddUserAccountReq) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *AddUserAccountReq) GetUser() *RegisterUserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

type AddUserAccountResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddUserAccountResp) Reset() {
	*x = AddUserAccountResp{}
	mi := &file_chat_chat_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddUserAccountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserAccountResp) ProtoMessage() {}

func (x *AddUserAccountResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserAccountResp.ProtoReflect.Descriptor instead.
func (*AddUserAccountResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{18}
}

type LoginReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AreaCode      string                 `protobuf:"bytes,1,opt,name=areaCode,proto3" json:"areaCode,omitempty"`
	PhoneNumber   string                 `protobuf:"bytes,2,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	VerifyCode    string                 `protobuf:"bytes,3,opt,name=verifyCode,proto3" json:"verifyCode,omitempty"`
	Account       string                 `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
	Password      string                 `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	Platform      int32                  `protobuf:"varint,6,opt,name=platform,proto3" json:"platform,omitempty"`
	DeviceID      string                 `protobuf:"bytes,7,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	Ip            string                 `protobuf:"bytes,8,opt,name=ip,proto3" json:"ip,omitempty"`
	Email         string                 `protobuf:"bytes,9,opt,name=email,proto3" json:"email,omitempty"`
	Address       string                 `protobuf:"bytes,10,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	mi := &file_chat_chat_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{19}
}

func (x *LoginReq) GetAreaCode() string {
	if x != nil {
		return x.AreaCode
	}
	return ""
}

func (x *LoginReq) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *LoginReq) GetVerifyCode() string {
	if x != nil {
		return x.VerifyCode
	}
	return ""
}

func (x *LoginReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginReq) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *LoginReq) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *LoginReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *LoginReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LoginReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ResetPasswordReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AreaCode      string                 `protobuf:"bytes,1,opt,name=areaCode,proto3" json:"areaCode,omitempty"`
	PhoneNumber   string                 `protobuf:"bytes,2,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	VerifyCode    string                 `protobuf:"bytes,3,opt,name=verifyCode,proto3" json:"verifyCode,omitempty"`
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Email         string                 `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetPasswordReq) Reset() {
	*x = ResetPasswordReq{}
	mi := &file_chat_chat_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordReq) ProtoMessage() {}

func (x *ResetPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordReq.ProtoReflect.Descriptor instead.
func (*ResetPasswordReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{20}
}

func (x *ResetPasswordReq) GetAreaCode() string {
	if x != nil {
		return x.AreaCode
	}
	return ""
}

func (x *ResetPasswordReq) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *ResetPasswordReq) GetVerifyCode() string {
	if x != nil {
		return x.VerifyCode
	}
	return ""
}

func (x *ResetPasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ResetPasswordReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type ResetPasswordResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetPasswordResp) Reset() {
	*x = ResetPasswordResp{}
	mi := &file_chat_chat_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetPasswordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordResp) ProtoMessage() {}

func (x *ResetPasswordResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordResp.ProtoReflect.Descriptor instead.
func (*ResetPasswordResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{21}
}

type ChangePasswordReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserID          string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CurrentPassword string                 `protobuf:"bytes,2,opt,name=currentPassword,proto3" json:"currentPassword,omitempty"`
	NewPassword     string                 `protobuf:"bytes,3,opt,name=newPassword,proto3" json:"newPassword,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ChangePasswordReq) Reset() {
	*x = ChangePasswordReq{}
	mi := &file_chat_chat_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordReq) ProtoMessage() {}

func (x *ChangePasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordReq.ProtoReflect.Descriptor instead.
func (*ChangePasswordReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{22}
}

func (x *ChangePasswordReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ChangePasswordReq) GetCurrentPassword() string {
	if x != nil {
		return x.CurrentPassword
	}
	return ""
}

func (x *ChangePasswordReq) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type ChangePasswordResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangePasswordResp) Reset() {
	*x = ChangePasswordResp{}
	mi := &file_chat_chat_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePasswordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordResp) ProtoMessage() {}

func (x *ChangePasswordResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordResp.ProtoReflect.Descriptor instead.
func (*ChangePasswordResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{23}
}

type FindUserAccountReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIDs       []string               `protobuf:"bytes,1,rep,name=userIDs,proto3" json:"userIDs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindUserAccountReq) Reset() {
	*x = FindUserAccountReq{}
	mi := &file_chat_chat_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindUserAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserAccountReq) ProtoMessage() {}

func (x *FindUserAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserAccountReq.ProtoReflect.Descriptor instead.
func (*FindUserAccountReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{24}
}

func (x *FindUserAccountReq) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

type FindUserAccountResp struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserAccountMap map[string]string      `protobuf:"bytes,1,rep,name=userAccountMap,proto3" json:"userAccountMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // userID  account
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FindUserAccountResp) Reset() {
	*x = FindUserAccountResp{}
	mi := &file_chat_chat_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindUserAccountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserAccountResp) ProtoMessage() {}

func (x *FindUserAccountResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserAccountResp.ProtoReflect.Descriptor instead.
func (*FindUserAccountResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{25}
}

func (x *FindUserAccountResp) GetUserAccountMap() map[string]string {
	if x != nil {
		return x.UserAccountMap
	}
	return nil
}

type FindAccountUserReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accounts      []string               `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindAccountUserReq) Reset() {
	*x = FindAccountUserReq{}
	mi := &file_chat_chat_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindAccountUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAccountUserReq) ProtoMessage() {}

func (x *FindAccountUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAccountUserReq.ProtoReflect.Descriptor instead.
func (*FindAccountUserReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{26}
}

func (x *FindAccountUserReq) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type FindAccountUserResp struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	AccountUserMap map[string]string      `protobuf:"bytes,1,rep,name=accountUserMap,proto3" json:"accountUserMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // account  userID
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FindAccountUserResp) Reset() {
	*x = FindAccountUserResp{}
	mi := &file_chat_chat_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindAccountUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAccountUserResp) ProtoMessage() {}

func (x *FindAccountUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAccountUserResp.ProtoReflect.Descriptor instead.
func (*FindAccountUserResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{27}
}

func (x *FindAccountUserResp) GetAccountUserMap() map[string]string {
	if x != nil {
		return x.AccountUserMap
	}
	return nil
}

type SignalRecord struct {
	state           protoimpl.MessageState   `protogen:"open.v1"`
	FileName        string                   `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	MediaType       string                   `protobuf:"bytes,2,opt,name=mediaType,proto3" json:"mediaType,omitempty"`
	RoomType        string                   `protobuf:"bytes,3,opt,name=roomType,proto3" json:"roomType,omitempty"`
	SenderID        string                   `protobuf:"bytes,4,opt,name=senderID,proto3" json:"senderID,omitempty"`
	SenderNickname  string                   `protobuf:"bytes,5,opt,name=senderNickname,proto3" json:"senderNickname,omitempty"`
	RecvID          string                   `protobuf:"bytes,6,opt,name=recvID,proto3" json:"recvID,omitempty"`
	RecvNickname    string                   `protobuf:"bytes,7,opt,name=recvNickname,proto3" json:"recvNickname,omitempty"`
	GroupID         string                   `protobuf:"bytes,8,opt,name=groupID,proto3" json:"groupID,omitempty"`
	GroupName       string                   `protobuf:"bytes,9,opt,name=groupName,proto3" json:"groupName,omitempty"`
	InviterUserList []*common.UserPublicInfo `protobuf:"bytes,10,rep,name=inviterUserList,proto3" json:"inviterUserList,omitempty"`
	Duration        int32                    `protobuf:"varint,11,opt,name=duration,proto3" json:"duration,omitempty"`
	CreateTime      int64                    `protobuf:"varint,12,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Size            string                   `protobuf:"bytes,13,opt,name=size,proto3" json:"size,omitempty"`
	DownloadURL     string                   `protobuf:"bytes,14,opt,name=downloadURL,proto3" json:"downloadURL,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SignalRecord) Reset() {
	*x = SignalRecord{}
	mi := &file_chat_chat_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalRecord) ProtoMessage() {}

func (x *SignalRecord) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalRecord.ProtoReflect.Descriptor instead.
func (*SignalRecord) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{28}
}

func (x *SignalRecord) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *SignalRecord) GetMediaType() string {
	if x != nil {
		return x.MediaType
	}
	return ""
}

func (x *SignalRecord) GetRoomType() string {
	if x != nil {
		return x.RoomType
	}
	return ""
}

func (x *SignalRecord) GetSenderID() string {
	if x != nil {
		return x.SenderID
	}
	return ""
}

func (x *SignalRecord) GetSenderNickname() string {
	if x != nil {
		return x.SenderNickname
	}
	return ""
}

func (x *SignalRecord) GetRecvID() string {
	if x != nil {
		return x.RecvID
	}
	return ""
}

func (x *SignalRecord) GetRecvNickname() string {
	if x != nil {
		return x.RecvNickname
	}
	return ""
}

func (x *SignalRecord) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *SignalRecord) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *SignalRecord) GetInviterUserList() []*common.UserPublicInfo {
	if x != nil {
		return x.InviterUserList
	}
	return nil
}

func (x *SignalRecord) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *SignalRecord) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SignalRecord) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *SignalRecord) GetDownloadURL() string {
	if x != nil {
		return x.DownloadURL
	}
	return ""
}

type OpenIMCallbackReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       string                 `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Body          string                 `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenIMCallbackReq) Reset() {
	*x = OpenIMCallbackReq{}
	mi := &file_chat_chat_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenIMCallbackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenIMCallbackReq) ProtoMessage() {}

func (x *OpenIMCallbackReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenIMCallbackReq.ProtoReflect.Descriptor instead.
func (*OpenIMCallbackReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{29}
}

func (x *OpenIMCallbackReq) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *OpenIMCallbackReq) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type OpenIMCallbackResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenIMCallbackResp) Reset() {
	*x = OpenIMCallbackResp{}
	mi := &file_chat_chat_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenIMCallbackResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenIMCallbackResp) ProtoMessage() {}

func (x *OpenIMCallbackResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenIMCallbackResp.ProtoReflect.Descriptor instead.
func (*OpenIMCallbackResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{30}
}

type SearchUserFullInfoReq struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Keyword       string                   `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Pagination    *sdkws.RequestPagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Genders       int32                    `protobuf:"varint,3,opt,name=genders,proto3" json:"genders,omitempty"`
	Normal        int32                    `protobuf:"varint,4,opt,name=normal,proto3" json:"normal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchUserFullInfoReq) Reset() {
	*x = SearchUserFullInfoReq{}
	mi := &file_chat_chat_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUserFullInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserFullInfoReq) ProtoMessage() {}

func (x *SearchUserFullInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserFullInfoReq.ProtoReflect.Descriptor instead.
func (*SearchUserFullInfoReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{31}
}

func (x *SearchUserFullInfoReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchUserFullInfoReq) GetPagination() *sdkws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SearchUserFullInfoReq) GetGenders() int32 {
	if x != nil {
		return x.Genders
	}
	return 0
}

func (x *SearchUserFullInfoReq) GetNormal() int32 {
	if x != nil {
		return x.Normal
	}
	return 0
}

type SearchUserFullInfoResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         uint32                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Users         []*common.UserFullInfo `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchUserFullInfoResp) Reset() {
	*x = SearchUserFullInfoResp{}
	mi := &file_chat_chat_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUserFullInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserFullInfoResp) ProtoMessage() {}

func (x *SearchUserFullInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserFullInfoResp.ProtoReflect.Descriptor instead.
func (*SearchUserFullInfoResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{32}
}

func (x *SearchUserFullInfoResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchUserFullInfoResp) GetUsers() []*common.UserFullInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

type UserLoginCountReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         int64                  `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End           int64                  `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserLoginCountReq) Reset() {
	*x = UserLoginCountReq{}
	mi := &file_chat_chat_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserLoginCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginCountReq) ProtoMessage() {}

func (x *UserLoginCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginCountReq.ProtoReflect.Descriptor instead.
func (*UserLoginCountReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{33}
}

func (x *UserLoginCountReq) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *UserLoginCountReq) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type UserLoginCountResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LoginCount    int64                  `protobuf:"varint,1,opt,name=loginCount,proto3" json:"loginCount,omitempty"`
	UnloginCount  int64                  `protobuf:"varint,2,opt,name=unloginCount,proto3" json:"unloginCount,omitempty"`
	Count         map[string]int64       `protobuf:"bytes,3,rep,name=count,proto3" json:"count,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserLoginCountResp) Reset() {
	*x = UserLoginCountResp{}
	mi := &file_chat_chat_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserLoginCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginCountResp) ProtoMessage() {}

func (x *UserLoginCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginCountResp.ProtoReflect.Descriptor instead.
func (*UserLoginCountResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{34}
}

func (x *UserLoginCountResp) GetLoginCount() int64 {
	if x != nil {
		return x.LoginCount
	}
	return 0
}

func (x *UserLoginCountResp) GetUnloginCount() int64 {
	if x != nil {
		return x.UnloginCount
	}
	return 0
}

func (x *UserLoginCountResp) GetCount() map[string]int64 {
	if x != nil {
		return x.Count
	}
	return nil
}

type LoginResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatToken     string                 `protobuf:"bytes,2,opt,name=chatToken,proto3" json:"chatToken,omitempty"`
	UserID        string                 `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID,omitempty"`
	Account       string                 `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
	NickName      string                 `protobuf:"bytes,5,opt,name=nickName,proto3" json:"nickName,omitempty"`
	SurName       string                 `protobuf:"bytes,6,opt,name=surName,proto3" json:"surName,omitempty"`
	Name          string                 `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	FaceUrl       string                 `protobuf:"bytes,8,opt,name=faceUrl,proto3" json:"faceUrl,omitempty"`
	QrcodeUrl     string                 `protobuf:"bytes,9,opt,name=qrcodeUrl,proto3" json:"qrcodeUrl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginResp) Reset() {
	*x = LoginResp{}
	mi := &file_chat_chat_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResp) ProtoMessage() {}

func (x *LoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResp.ProtoReflect.Descriptor instead.
func (*LoginResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{35}
}

func (x *LoginResp) GetChatToken() string {
	if x != nil {
		return x.ChatToken
	}
	return ""
}

func (x *LoginResp) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *LoginResp) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *LoginResp) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *LoginResp) GetSurName() string {
	if x != nil {
		return x.SurName
	}
	return ""
}

func (x *LoginResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoginResp) GetFaceUrl() string {
	if x != nil {
		return x.FaceUrl
	}
	return ""
}

func (x *LoginResp) GetQrcodeUrl() string {
	if x != nil {
		return x.QrcodeUrl
	}
	return ""
}

type SearchUserInfoReq struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Keyword       string                   `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Pagination    *sdkws.RequestPagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Genders       []int32                  `protobuf:"varint,3,rep,packed,name=genders,proto3" json:"genders,omitempty"`
	UserIDs       []string                 `protobuf:"bytes,4,rep,name=userIDs,proto3" json:"userIDs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchUserInfoReq) Reset() {
	*x = SearchUserInfoReq{}
	mi := &file_chat_chat_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserInfoReq) ProtoMessage() {}

func (x *SearchUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserInfoReq.ProtoReflect.Descriptor instead.
func (*SearchUserInfoReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{36}
}

func (x *SearchUserInfoReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchUserInfoReq) GetPagination() *sdkws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SearchUserInfoReq) GetGenders() []int32 {
	if x != nil {
		return x.Genders
	}
	return nil
}

func (x *SearchUserInfoReq) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

type SearchUserInfoResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         uint32                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Users         []*common.UserFullInfo `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchUserInfoResp) Reset() {
	*x = SearchUserInfoResp{}
	mi := &file_chat_chat_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserInfoResp) ProtoMessage() {}

func (x *SearchUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserInfoResp.ProtoReflect.Descriptor instead.
func (*SearchUserInfoResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{37}
}

func (x *SearchUserInfoResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchUserInfoResp) GetUsers() []*common.UserFullInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

type GetTokenForVideoMeetingReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Room          string                 `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	Identity      string                 `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTokenForVideoMeetingReq) Reset() {
	*x = GetTokenForVideoMeetingReq{}
	mi := &file_chat_chat_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenForVideoMeetingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenForVideoMeetingReq) ProtoMessage() {}

func (x *GetTokenForVideoMeetingReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenForVideoMeetingReq.ProtoReflect.Descriptor instead.
func (*GetTokenForVideoMeetingReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{38}
}

func (x *GetTokenForVideoMeetingReq) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

func (x *GetTokenForVideoMeetingReq) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

type GetTokenForVideoMeetingResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerUrl     string                 `protobuf:"bytes,1,opt,name=serverUrl,proto3" json:"serverUrl,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTokenForVideoMeetingResp) Reset() {
	*x = GetTokenForVideoMeetingResp{}
	mi := &file_chat_chat_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenForVideoMeetingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenForVideoMeetingResp) ProtoMessage() {}

func (x *GetTokenForVideoMeetingResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenForVideoMeetingResp.ProtoReflect.Descriptor instead.
func (*GetTokenForVideoMeetingResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{39}
}

func (x *GetTokenForVideoMeetingResp) GetServerUrl() string {
	if x != nil {
		return x.ServerUrl
	}
	return ""
}

func (x *GetTokenForVideoMeetingResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CheckUserExistReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *RegisterUserInfo      `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckUserExistReq) Reset() {
	*x = CheckUserExistReq{}
	mi := &file_chat_chat_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckUserExistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserExistReq) ProtoMessage() {}

func (x *CheckUserExistReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserExistReq.ProtoReflect.Descriptor instead.
func (*CheckUserExistReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{40}
}

func (x *CheckUserExistReq) GetUser() *RegisterUserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

type CheckUserExistResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Userid        string                 `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	IsRegistered  bool                   `protobuf:"varint,2,opt,name=isRegistered,proto3" json:"isRegistered,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckUserExistResp) Reset() {
	*x = CheckUserExistResp{}
	mi := &file_chat_chat_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckUserExistResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserExistResp) ProtoMessage() {}

func (x *CheckUserExistResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserExistResp.ProtoReflect.Descriptor instead.
func (*CheckUserExistResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{41}
}

func (x *CheckUserExistResp) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *CheckUserExistResp) GetIsRegistered() bool {
	if x != nil {
		return x.IsRegistered
	}
	return false
}

type DelUserAccountReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIDs       []string               `protobuf:"bytes,1,rep,name=userIDs,proto3" json:"userIDs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelUserAccountReq) Reset() {
	*x = DelUserAccountReq{}
	mi := &file_chat_chat_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelUserAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUserAccountReq) ProtoMessage() {}

func (x *DelUserAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUserAccountReq.ProtoReflect.Descriptor instead.
func (*DelUserAccountReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{42}
}

func (x *DelUserAccountReq) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

type DelUserAccountResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelUserAccountResp) Reset() {
	*x = DelUserAccountResp{}
	mi := &file_chat_chat_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelUserAccountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUserAccountResp) ProtoMessage() {}

func (x *DelUserAccountResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUserAccountResp.ProtoReflect.Descriptor instead.
func (*DelUserAccountResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{43}
}

type SetAllowRegisterReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AllowRegister bool                   `protobuf:"varint,1,opt,name=allowRegister,proto3" json:"allowRegister,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetAllowRegisterReq) Reset() {
	*x = SetAllowRegisterReq{}
	mi := &file_chat_chat_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAllowRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAllowRegisterReq) ProtoMessage() {}

func (x *SetAllowRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAllowRegisterReq.ProtoReflect.Descriptor instead.
func (*SetAllowRegisterReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{44}
}

func (x *SetAllowRegisterReq) GetAllowRegister() bool {
	if x != nil {
		return x.AllowRegister
	}
	return false
}

type SetAllowRegisterResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetAllowRegisterResp) Reset() {
	*x = SetAllowRegisterResp{}
	mi := &file_chat_chat_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAllowRegisterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAllowRegisterResp) ProtoMessage() {}

func (x *SetAllowRegisterResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAllowRegisterResp.ProtoReflect.Descriptor instead.
func (*SetAllowRegisterResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{45}
}

type GetAllowRegisterReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllowRegisterReq) Reset() {
	*x = GetAllowRegisterReq{}
	mi := &file_chat_chat_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllowRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllowRegisterReq) ProtoMessage() {}

func (x *GetAllowRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllowRegisterReq.ProtoReflect.Descriptor instead.
func (*GetAllowRegisterReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{46}
}

type GetAllowRegisterResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AllowRegister bool                   `protobuf:"varint,1,opt,name=allowRegister,proto3" json:"allowRegister,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllowRegisterResp) Reset() {
	*x = GetAllowRegisterResp{}
	mi := &file_chat_chat_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllowRegisterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllowRegisterResp) ProtoMessage() {}

func (x *GetAllowRegisterResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllowRegisterResp.ProtoReflect.Descriptor instead.
func (*GetAllowRegisterResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{47}
}

func (x *GetAllowRegisterResp) GetAllowRegister() bool {
	if x != nil {
		return x.AllowRegister
	}
	return false
}

type GetContactListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIDs       string                 `protobuf:"bytes,1,opt,name=UserIDs,proto3" json:"UserIDs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContactListReq) Reset() {
	*x = GetContactListReq{}
	mi := &file_chat_chat_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContactListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactListReq) ProtoMessage() {}

func (x *GetContactListReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactListReq.ProtoReflect.Descriptor instead.
func (*GetContactListReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{48}
}

func (x *GetContactListReq) GetUserIDs() string {
	if x != nil {
		return x.UserIDs
	}
	return ""
}

type GetContactListResp struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Users         []*common.ContactFullInfo `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContactListResp) Reset() {
	*x = GetContactListResp{}
	mi := &file_chat_chat_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContactListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactListResp) ProtoMessage() {}

func (x *GetContactListResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactListResp.ProtoReflect.Descriptor instead.
func (*GetContactListResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{49}
}

func (x *GetContactListResp) GetUsers() []*common.ContactFullInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

type CreateContactReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ContactUserId string                 `protobuf:"bytes,2,opt,name=contactUserId,proto3" json:"contactUserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateContactReq) Reset() {
	*x = CreateContactReq{}
	mi := &file_chat_chat_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateContactReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContactReq) ProtoMessage() {}

func (x *CreateContactReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContactReq.ProtoReflect.Descriptor instead.
func (*CreateContactReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{50}
}

func (x *CreateContactReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateContactReq) GetContactUserId() string {
	if x != nil {
		return x.ContactUserId
	}
	return ""
}

type CreateContactResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateContactResp) Reset() {
	*x = CreateContactResp{}
	mi := &file_chat_chat_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateContactResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContactResp) ProtoMessage() {}

func (x *CreateContactResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContactResp.ProtoReflect.Descriptor instead.
func (*CreateContactResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{51}
}

type DelContactReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ContactUserIds []string               `protobuf:"bytes,2,rep,name=contactUserIds,proto3" json:"contactUserIds,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DelContactReq) Reset() {
	*x = DelContactReq{}
	mi := &file_chat_chat_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelContactReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelContactReq) ProtoMessage() {}

func (x *DelContactReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelContactReq.ProtoReflect.Descriptor instead.
func (*DelContactReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{52}
}

func (x *DelContactReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DelContactReq) GetContactUserIds() []string {
	if x != nil {
		return x.ContactUserIds
	}
	return nil
}

type DelContactResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelContactResp) Reset() {
	*x = DelContactResp{}
	mi := &file_chat_chat_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelContactResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelContactResp) ProtoMessage() {}

func (x *DelContactResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelContactResp.ProtoReflect.Descriptor instead.
func (*DelContactResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{53}
}

type IsContactReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ContactUserId string                 `protobuf:"bytes,2,opt,name=contactUserId,proto3" json:"contactUserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsContactReq) Reset() {
	*x = IsContactReq{}
	mi := &file_chat_chat_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsContactReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsContactReq) ProtoMessage() {}

func (x *IsContactReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsContactReq.ProtoReflect.Descriptor instead.
func (*IsContactReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{54}
}

func (x *IsContactReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *IsContactReq) GetContactUserId() string {
	if x != nil {
		return x.ContactUserId
	}
	return ""
}

type IsContactResp struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	InUserIdContact int32                  `protobuf:"varint,1,opt,name=inUserIdContact,proto3" json:"inUserIdContact,omitempty"`
	PublicKey       string                 `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *IsContactResp) Reset() {
	*x = IsContactResp{}
	mi := &file_chat_chat_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsContactResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsContactResp) ProtoMessage() {}

func (x *IsContactResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsContactResp.ProtoReflect.Descriptor instead.
func (*IsContactResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{55}
}

func (x *IsContactResp) GetInUserIdContact() int32 {
	if x != nil {
		return x.InUserIdContact
	}
	return 0
}

func (x *IsContactResp) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type BlockContactReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ContactUserId string                 `protobuf:"bytes,2,opt,name=contactUserId,proto3" json:"contactUserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockContactReq) Reset() {
	*x = BlockContactReq{}
	mi := &file_chat_chat_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockContactReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockContactReq) ProtoMessage() {}

func (x *BlockContactReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockContactReq.ProtoReflect.Descriptor instead.
func (*BlockContactReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{56}
}

func (x *BlockContactReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BlockContactReq) GetContactUserId() string {
	if x != nil {
		return x.ContactUserId
	}
	return ""
}

type BlockContactResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockContactResp) Reset() {
	*x = BlockContactResp{}
	mi := &file_chat_chat_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockContactResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockContactResp) ProtoMessage() {}

func (x *BlockContactResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockContactResp.ProtoReflect.Descriptor instead.
func (*BlockContactResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{57}
}

type CancelBlockReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ContactUserId string                 `protobuf:"bytes,2,opt,name=contactUserId,proto3" json:"contactUserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelBlockReq) Reset() {
	*x = CancelBlockReq{}
	mi := &file_chat_chat_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelBlockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelBlockReq) ProtoMessage() {}

func (x *CancelBlockReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelBlockReq.ProtoReflect.Descriptor instead.
func (*CancelBlockReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{58}
}

func (x *CancelBlockReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CancelBlockReq) GetContactUserId() string {
	if x != nil {
		return x.ContactUserId
	}
	return ""
}

type CancelBlockResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelBlockResp) Reset() {
	*x = CancelBlockResp{}
	mi := &file_chat_chat_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelBlockResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelBlockResp) ProtoMessage() {}

func (x *CancelBlockResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelBlockResp.ProtoReflect.Descriptor instead.
func (*CancelBlockResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{59}
}

type UpdateContactReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ContactUserId string                 `protobuf:"bytes,2,opt,name=contactUserId,proto3" json:"contactUserId,omitempty"`
	RemarkName    string                 `protobuf:"bytes,3,opt,name=remarkName,proto3" json:"remarkName,omitempty"`
	RemarkSurName string                 `protobuf:"bytes,4,opt,name=remarkSurName,proto3" json:"remarkSurName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateContactReq) Reset() {
	*x = UpdateContactReq{}
	mi := &file_chat_chat_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateContactReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContactReq) ProtoMessage() {}

func (x *UpdateContactReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContactReq.ProtoReflect.Descriptor instead.
func (*UpdateContactReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{60}
}

func (x *UpdateContactReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateContactReq) GetContactUserId() string {
	if x != nil {
		return x.ContactUserId
	}
	return ""
}

func (x *UpdateContactReq) GetRemarkName() string {
	if x != nil {
		return x.RemarkName
	}
	return ""
}

func (x *UpdateContactReq) GetRemarkSurName() string {
	if x != nil {
		return x.RemarkSurName
	}
	return ""
}

type UpdateContactResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateContactResp) Reset() {
	*x = UpdateContactResp{}
	mi := &file_chat_chat_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateContactResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContactResp) ProtoMessage() {}

func (x *UpdateContactResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContactResp.ProtoReflect.Descriptor instead.
func (*UpdateContactResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{61}
}

type BlockContactListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockContactListReq) Reset() {
	*x = BlockContactListReq{}
	mi := &file_chat_chat_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockContactListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockContactListReq) ProtoMessage() {}

func (x *BlockContactListReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockContactListReq.ProtoReflect.Descriptor instead.
func (*BlockContactListReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{62}
}

func (x *BlockContactListReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type BlockContactListResp struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Users         []*common.UserPublicInfo `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockContactListResp) Reset() {
	*x = BlockContactListResp{}
	mi := &file_chat_chat_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockContactListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockContactListResp) ProtoMessage() {}

func (x *BlockContactListResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockContactListResp.ProtoReflect.Descriptor instead.
func (*BlockContactListResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{63}
}

func (x *BlockContactListResp) GetUsers() []*common.UserPublicInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

type GetAllOnlineUsersReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllOnlineUsersReq) Reset() {
	*x = GetAllOnlineUsersReq{}
	mi := &file_chat_chat_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllOnlineUsersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllOnlineUsersReq) ProtoMessage() {}

func (x *GetAllOnlineUsersReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllOnlineUsersReq.ProtoReflect.Descriptor instead.
func (*GetAllOnlineUsersReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{64}
}

type OnlineUsers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ç¨æ·ç¼å·
	Value         []int32                `protobuf:"varint,2,rep,packed,name=value,proto3" json:"value,omitempty"`         // valueå¼
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnlineUsers) Reset() {
	*x = OnlineUsers{}
	mi := &file_chat_chat_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlineUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineUsers) ProtoMessage() {}

func (x *OnlineUsers) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineUsers.ProtoReflect.Descriptor instead.
func (*OnlineUsers) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{65}
}

func (x *OnlineUsers) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OnlineUsers) GetValue() []int32 {
	if x != nil {
		return x.Value
	}
	return nil
}

// è·åææå¨çº¿ç¨æ·çååº
type GetAllOnlineUsersResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OnlineUsers   []*OnlineUsers         `protobuf:"bytes,1,rep,name=online_users,json=onlineUsers,proto3" json:"online_users,omitempty"` // æææå¡å¨çå¨çº¿ç¨æ·åè¡¨
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllOnlineUsersResp) Reset() {
	*x = GetAllOnlineUsersResp{}
	mi := &file_chat_chat_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllOnlineUsersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllOnlineUsersResp) ProtoMessage() {}

func (x *GetAllOnlineUsersResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllOnlineUsersResp.ProtoReflect.Descriptor instead.
func (*GetAllOnlineUsersResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{66}
}

func (x *GetAllOnlineUsersResp) GetOnlineUsers() []*OnlineUsers {
	if x != nil {
		return x.OnlineUsers
	}
	return nil
}

type GetAllOfflineUsersReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllOfflineUsersReq) Reset() {
	*x = GetAllOfflineUsersReq{}
	mi := &file_chat_chat_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllOfflineUsersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllOfflineUsersReq) ProtoMessage() {}

func (x *GetAllOfflineUsersReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllOfflineUsersReq.ProtoReflect.Descriptor instead.
func (*GetAllOfflineUsersReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{67}
}

type OfflineUsers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ç¨æ·ç¼å·
	Value         []int32                `protobuf:"varint,2,rep,packed,name=value,proto3" json:"value,omitempty"`         // valueå¼
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OfflineUsers) Reset() {
	*x = OfflineUsers{}
	mi := &file_chat_chat_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OfflineUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineUsers) ProtoMessage() {}

func (x *OfflineUsers) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineUsers.ProtoReflect.Descriptor instead.
func (*OfflineUsers) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{68}
}

func (x *OfflineUsers) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OfflineUsers) GetValue() []int32 {
	if x != nil {
		return x.Value
	}
	return nil
}

type GetAllOfflineUsersResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OfflineUsers  []*OfflineUsers        `protobuf:"bytes,1,rep,name=offline_users,json=offlineUsers,proto3" json:"offline_users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllOfflineUsersResp) Reset() {
	*x = GetAllOfflineUsersResp{}
	mi := &file_chat_chat_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllOfflineUsersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllOfflineUsersResp) ProtoMessage() {}

func (x *GetAllOfflineUsersResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllOfflineUsersResp.ProtoReflect.Descriptor instead.
func (*GetAllOfflineUsersResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{69}
}

func (x *GetAllOfflineUsersResp) GetOfflineUsers() []*OfflineUsers {
	if x != nil {
		return x.OfflineUsers
	}
	return nil
}

type AttributeListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIDs       []string               `protobuf:"bytes,1,rep,name=userIDs,proto3" json:"userIDs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttributeListReq) Reset() {
	*x = AttributeListReq{}
	mi := &file_chat_chat_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttributeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeListReq) ProtoMessage() {}

func (x *AttributeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeListReq.ProtoReflect.Descriptor instead.
func (*AttributeListReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{70}
}

func (x *AttributeListReq) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

type Attribute struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	UserID                  string                 `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Account                 string                 `protobuf:"bytes,2,opt,name=Account,proto3" json:"Account,omitempty"`
	PhoneNumber             string                 `protobuf:"bytes,3,opt,name=PhoneNumber,proto3" json:"PhoneNumber,omitempty"`
	AreaCode                string                 `protobuf:"bytes,4,opt,name=AreaCode,proto3" json:"AreaCode,omitempty"`
	Email                   string                 `protobuf:"bytes,5,opt,name=Email,proto3" json:"Email,omitempty"`
	Nickname                string                 `protobuf:"bytes,6,opt,name=Nickname,proto3" json:"Nickname,omitempty"`
	FaceURL                 string                 `protobuf:"bytes,7,opt,name=FaceURL,proto3" json:"FaceURL,omitempty"`
	Gender                  string                 `protobuf:"bytes,8,opt,name=Gender,proto3" json:"Gender,omitempty"`
	CreateTime              int32                  `protobuf:"varint,9,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	ChangeTime              int32                  `protobuf:"varint,10,opt,name=ChangeTime,proto3" json:"ChangeTime,omitempty"`
	BirthTime               int32                  `protobuf:"varint,11,opt,name=BirthTime,proto3" json:"BirthTime,omitempty"`
	Level                   int32                  `protobuf:"varint,12,opt,name=Level,proto3" json:"Level,omitempty"`
	AllowVibration          int32                  `protobuf:"varint,13,opt,name=AllowVibration,proto3" json:"AllowVibration,omitempty"`
	AllowBeep               int32                  `protobuf:"varint,14,opt,name=AllowBeep,proto3" json:"AllowBeep,omitempty"`
	AllowAddFriend          int32                  `protobuf:"varint,15,opt,name=AllowAddFriend,proto3" json:"AllowAddFriend,omitempty"`
	GlobalRecvMsgOpt        int32                  `protobuf:"varint,16,opt,name=GlobalRecvMsgOpt,proto3" json:"GlobalRecvMsgOpt,omitempty"`
	RegisterType            int32                  `protobuf:"varint,17,opt,name=RegisterType,proto3" json:"RegisterType,omitempty"`
	PublicKey               string                 `protobuf:"bytes,18,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	Address                 string                 `protobuf:"bytes,19,opt,name=Address,proto3" json:"Address,omitempty"`
	Surname                 string                 `protobuf:"bytes,20,opt,name=Surname,proto3" json:"Surname,omitempty"`
	Name                    string                 `protobuf:"bytes,21,opt,name=Name,proto3" json:"Name,omitempty"`
	IsContact               int32                  `protobuf:"varint,22,opt,name=IsContact,proto3" json:"IsContact,omitempty"`
	IsBlocked               int32                  `protobuf:"varint,23,opt,name=IsBlocked,proto3" json:"IsBlocked,omitempty"`
	OnlineStatus            int32                  `protobuf:"varint,24,opt,name=OnlineStatus,proto3" json:"OnlineStatus,omitempty"`
	OfflineAt               int32                  `protobuf:"varint,25,opt,name=OfflineAt,proto3" json:"OfflineAt,omitempty"`
	AutoDeleteMsg           int32                  `protobuf:"varint,26,opt,name=AutoDeleteMsg,proto3" json:"AutoDeleteMsg,omitempty"`
	AutoDeleteDuration      int32                  `protobuf:"varint,27,opt,name=AutoDeleteDuration,proto3" json:"AutoDeleteDuration,omitempty"`
	AllowVoiceCalls         int32                  `protobuf:"varint,28,opt,name=AllowVoiceCalls,proto3" json:"AllowVoiceCalls,omitempty"`
	AllowGroupInvitations   int32                  `protobuf:"varint,29,opt,name=AllowGroupInvitations,proto3" json:"AllowGroupInvitations,omitempty"`
	QrcodeUrl               string                 `protobuf:"bytes,30,opt,name=QrcodeUrl,proto3" json:"QrcodeUrl,omitempty"`
	AllowViewLastOnlineTime int32                  `protobuf:"varint,31,opt,name=AllowViewLastOnlineTime,proto3" json:"AllowViewLastOnlineTime,omitempty"`
	AllowSendMessages       int32                  `protobuf:"varint,32,opt,name=AllowSendMessages,proto3" json:"AllowSendMessages,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Attribute) Reset() {
	*x = Attribute{}
	mi := &file_chat_chat_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute) ProtoMessage() {}

func (x *Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute.ProtoReflect.Descriptor instead.
func (*Attribute) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{71}
}

func (x *Attribute) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Attribute) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Attribute) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *Attribute) GetAreaCode() string {
	if x != nil {
		return x.AreaCode
	}
	return ""
}

func (x *Attribute) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Attribute) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Attribute) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *Attribute) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Attribute) GetCreateTime() int32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Attribute) GetChangeTime() int32 {
	if x != nil {
		return x.ChangeTime
	}
	return 0
}

func (x *Attribute) GetBirthTime() int32 {
	if x != nil {
		return x.BirthTime
	}
	return 0
}

func (x *Attribute) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Attribute) GetAllowVibration() int32 {
	if x != nil {
		return x.AllowVibration
	}
	return 0
}

func (x *Attribute) GetAllowBeep() int32 {
	if x != nil {
		return x.AllowBeep
	}
	return 0
}

func (x *Attribute) GetAllowAddFriend() int32 {
	if x != nil {
		return x.AllowAddFriend
	}
	return 0
}

func (x *Attribute) GetGlobalRecvMsgOpt() int32 {
	if x != nil {
		return x.GlobalRecvMsgOpt
	}
	return 0
}

func (x *Attribute) GetRegisterType() int32 {
	if x != nil {
		return x.RegisterType
	}
	return 0
}

func (x *Attribute) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Attribute) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Attribute) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *Attribute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Attribute) GetIsContact() int32 {
	if x != nil {
		return x.IsContact
	}
	return 0
}

func (x *Attribute) GetIsBlocked() int32 {
	if x != nil {
		return x.IsBlocked
	}
	return 0
}

func (x *Attribute) GetOnlineStatus() int32 {
	if x != nil {
		return x.OnlineStatus
	}
	return 0
}

func (x *Attribute) GetOfflineAt() int32 {
	if x != nil {
		return x.OfflineAt
	}
	return 0
}

func (x *Attribute) GetAutoDeleteMsg() int32 {
	if x != nil {
		return x.AutoDeleteMsg
	}
	return 0
}

func (x *Attribute) GetAutoDeleteDuration() int32 {
	if x != nil {
		return x.AutoDeleteDuration
	}
	return 0
}

func (x *Attribute) GetAllowVoiceCalls() int32 {
	if x != nil {
		return x.AllowVoiceCalls
	}
	return 0
}

func (x *Attribute) GetAllowGroupInvitations() int32 {
	if x != nil {
		return x.AllowGroupInvitations
	}
	return 0
}

func (x *Attribute) GetQrcodeUrl() string {
	if x != nil {
		return x.QrcodeUrl
	}
	return ""
}

func (x *Attribute) GetAllowViewLastOnlineTime() int32 {
	if x != nil {
		return x.AllowViewLastOnlineTime
	}
	return 0
}

func (x *Attribute) GetAllowSendMessages() int32 {
	if x != nil {
		return x.AllowSendMessages
	}
	return 0
}

type AttributeListResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*Attribute           `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttributeListResp) Reset() {
	*x = AttributeListResp{}
	mi := &file_chat_chat_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttributeListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeListResp) ProtoMessage() {}

func (x *AttributeListResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeListResp.ProtoReflect.Descriptor instead.
func (*AttributeListResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{72}
}

func (x *AttributeListResp) GetUsers() []*Attribute {
	if x != nil {
		return x.Users
	}
	return nil
}

type GetContactListByUserIdsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIDs       string                 `protobuf:"bytes,1,opt,name=UserIDs,proto3" json:"UserIDs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContactListByUserIdsReq) Reset() {
	*x = GetContactListByUserIdsReq{}
	mi := &file_chat_chat_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContactListByUserIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactListByUserIdsReq) ProtoMessage() {}

func (x *GetContactListByUserIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactListByUserIdsReq.ProtoReflect.Descriptor instead.
func (*GetContactListByUserIdsReq) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{73}
}

func (x *GetContactListByUserIdsReq) GetUserIDs() string {
	if x != nil {
		return x.UserIDs
	}
	return ""
}

type GetContactListByUserIdsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*common.Contact      `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContactListByUserIdsResp) Reset() {
	*x = GetContactListByUserIdsResp{}
	mi := &file_chat_chat_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContactListByUserIdsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactListByUserIdsResp) ProtoMessage() {}

func (x *GetContactListByUserIdsResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactListByUserIdsResp.ProtoReflect.Descriptor instead.
func (*GetContactListByUserIdsResp) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{74}
}

func (x *GetContactListByUserIdsResp) GetUsers() []*common.Contact {
	if x != nil {
		return x.Users
	}
	return nil
}

var File_chat_chat_proto protoreflect.FileDescriptor

const file_chat_chat_proto_rawDesc = "" +
	"\n" +
	"\x0fchat/chat.proto\x12\vopenim.chat\x1a\x13common/common.proto\x1a\x11sdkws/sdkws.proto\x1a\x1bwrapperspb/wrapperspb.proto\"\xb4\x01\n" +
	"\fUserIdentity\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x1a\n" +
	"\bareaCode\x18\x02 \x01(\tR\bareaCode\x12 \n" +
	"\vphoneNumber\x18\x03 \x01(\tR\vphoneNumber\x12\x1a\n" +
	"\bdeviceID\x18\x04 \x01(\tR\bdeviceID\x12\x1a\n" +
	"\bplatform\x18\x05 \x01(\x05R\bplatform\x12\x18\n" +
	"\aaccount\x18\x06 \x01(\tR\aaccount\"\xd7\a\n" +
	"\x11UpdateUserInfoReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x126\n" +
	"\aaccount\x18\x02 \x01(\v2\x1c.openim.protobuf.StringValueR\aaccount\x12>\n" +
	"\vphoneNumber\x18\x03 \x01(\v2\x1c.openim.protobuf.StringValueR\vphoneNumber\x128\n" +
	"\bareaCode\x18\x04 \x01(\v2\x1c.openim.protobuf.StringValueR\bareaCode\x122\n" +
	"\x05email\x18\x05 \x01(\v2\x1c.openim.protobuf.StringValueR\x05email\x128\n" +
	"\bnickname\x18\x06 \x01(\v2\x1c.openim.protobuf.StringValueR\bnickname\x126\n" +
	"\afaceURL\x18\a \x01(\v2\x1c.openim.protobuf.StringValueR\afaceURL\x123\n" +
	"\x06gender\x18\b \x01(\v2\x1b.openim.protobuf.Int32ValueR\x06gender\x121\n" +
	"\x05level\x18\t \x01(\v2\x1b.openim.protobuf.Int32ValueR\x05level\x121\n" +
	"\x05birth\x18\n" +
	" \x01(\v2\x1b.openim.protobuf.Int64ValueR\x05birth\x12C\n" +
	"\x0eallowAddFriend\x18\v \x01(\v2\x1b.openim.protobuf.Int32ValueR\x0eallowAddFriend\x129\n" +
	"\tallowBeep\x18\f \x01(\v2\x1b.openim.protobuf.Int32ValueR\tallowBeep\x12C\n" +
	"\x0eallowVibration\x18\r \x01(\v2\x1b.openim.protobuf.Int32ValueR\x0eallowVibration\x12G\n" +
	"\x10globalRecvMsgOpt\x18\x0e \x01(\v2\x1b.openim.protobuf.Int32ValueR\x10globalRecvMsgOpt\x12?\n" +
	"\fRegisterType\x18\x0f \x01(\v2\x1b.openim.protobuf.Int32ValueR\fRegisterType\x120\n" +
	"\x04name\x18\x10 \x01(\v2\x1c.openim.protobuf.StringValueR\x04name\x126\n" +
	"\asurname\x18\x11 \x01(\v2\x1c.openim.protobuf.StringValueR\asurname\"J\n" +
	"\x12UpdateUserInfoResp\x12\x18\n" +
	"\afaceUrl\x18\x01 \x01(\tR\afaceUrl\x12\x1a\n" +
	"\bnickName\x18\x02 \x01(\tR\bnickName\")\n" +
	"\x0fDownloadLinkReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\"1\n" +
	"\x15FindUserPublicInfoReq\x12\x18\n" +
	"\auserIDs\x18\x01 \x03(\tR\auserIDs\"R\n" +
	"\x16FindUserPublicInfoResp\x128\n" +
	"\x05users\x18\x01 \x03(\v2\".openim.chat.common.UserPublicInfoR\x05users\"\x8e\x01\n" +
	"\x17SearchUserPublicInfoReq\x12\x18\n" +
	"\akeyword\x18\x01 \x01(\tR\akeyword\x12?\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1f.openim.sdkws.RequestPaginationR\n" +
	"pagination\x12\x18\n" +
	"\agenders\x18\x03 \x01(\x05R\agenders\"j\n" +
	"\x18SearchUserPublicInfoResp\x12\x14\n" +
	"\x05total\x18\x01 \x01(\rR\x05total\x128\n" +
	"\x05users\x18\x02 \x03(\v2\".openim.chat.common.UserPublicInfoR\x05users\"/\n" +
	"\x13FindUserFullInfoReq\x12\x18\n" +
	"\auserIDs\x18\x01 \x03(\tR\auserIDs\"N\n" +
	"\x14FindUserFullInfoResp\x126\n" +
	"\x05users\x18\x01 \x03(\v2 .openim.chat.common.UserFullInfoR\x05users\"\xf1\x01\n" +
	"\x11SendVerifyCodeReq\x12\x18\n" +
	"\ausedFor\x18\x01 \x01(\x05R\ausedFor\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12&\n" +
	"\x0einvitationCode\x18\x03 \x01(\tR\x0einvitationCode\x12\x1a\n" +
	"\bdeviceID\x18\x04 \x01(\tR\bdeviceID\x12\x1a\n" +
	"\bplatform\x18\x05 \x01(\x05R\bplatform\x12\x1a\n" +
	"\bareaCode\x18\x06 \x01(\tR\bareaCode\x12 \n" +
	"\vphoneNumber\x18\a \x01(\tR\vphoneNumber\x12\x14\n" +
	"\x05email\x18\b \x01(\tR\x05email\"\x14\n" +
	"\x12SendVerifyCodeResp\"\x83\x01\n" +
	"\rVerifyCodeReq\x12\x1a\n" +
	"\bareaCode\x18\x01 \x01(\tR\bareaCode\x12 \n" +
	"\vphoneNumber\x18\x02 \x01(\tR\vphoneNumber\x12\x1e\n" +
	"\n" +
	"verifyCode\x18\x03 \x01(\tR\n" +
	"verifyCode\x12\x14\n" +
	"\x05email\x18\x04 \x01(\tR\x05email\"\x10\n" +
	"\x0eVerifyCodeResp\"\xa2\x03\n" +
	"\x10RegisterUserInfo\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x1a\n" +
	"\bnickname\x18\x02 \x01(\tR\bnickname\x12\x18\n" +
	"\afaceURL\x18\x03 \x01(\tR\afaceURL\x12\x14\n" +
	"\x05birth\x18\x04 \x01(\x03R\x05birth\x12\x16\n" +
	"\x06gender\x18\x05 \x01(\x05R\x06gender\x12\x1a\n" +
	"\bareaCode\x18\x06 \x01(\tR\bareaCode\x12 \n" +
	"\vphoneNumber\x18\a \x01(\tR\vphoneNumber\x12\x14\n" +
	"\x05email\x18\b \x01(\tR\x05email\x12\x18\n" +
	"\aaccount\x18\t \x01(\tR\aaccount\x12\x1a\n" +
	"\bpassword\x18\n" +
	" \x01(\tR\bpassword\x12\"\n" +
	"\fRegisterType\x18\v \x01(\x05R\fRegisterType\x12\x1c\n" +
	"\tpublicKey\x18\f \x01(\tR\tpublicKey\x12\x18\n" +
	"\aaddress\x18\r \x01(\tR\aaddress\x12\x18\n" +
	"\asurname\x18\x0e \x01(\tR\asurname\x12\x12\n" +
	"\x04name\x18\x0f \x01(\tR\x04name\"\xf2\x01\n" +
	"\x0fRegisterUserReq\x12&\n" +
	"\x0einvitationCode\x18\x01 \x01(\tR\x0einvitationCode\x12\x1e\n" +
	"\n" +
	"verifyCode\x18\x02 \x01(\tR\n" +
	"verifyCode\x12\x0e\n" +
	"\x02ip\x18\x03 \x01(\tR\x02ip\x12\x1a\n" +
	"\bdeviceID\x18\x04 \x01(\tR\bdeviceID\x12\x1a\n" +
	"\bplatform\x18\x05 \x01(\x05R\bplatform\x12\x1c\n" +
	"\tautoLogin\x18\x06 \x01(\bR\tautoLogin\x121\n" +
	"\x04user\x18\a \x01(\v2\x1d.openim.chat.RegisterUserInfoR\x04user\"H\n" +
	"\x10RegisterUserResp\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x1c\n" +
	"\tchatToken\x18\x03 \x01(\tR\tchatToken\"\x8e\x01\n" +
	"\x11AddUserAccountReq\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\x12\x1a\n" +
	"\bdeviceID\x18\x02 \x01(\tR\bdeviceID\x12\x1a\n" +
	"\bplatform\x18\x03 \x01(\x05R\bplatform\x121\n" +
	"\x04user\x18\x04 \x01(\v2\x1d.openim.chat.RegisterUserInfoR\x04user\"\x14\n" +
	"\x12AddUserAccountResp\"\x96\x02\n" +
	"\bLoginReq\x12\x1a\n" +
	"\bareaCode\x18\x01 \x01(\tR\bareaCode\x12 \n" +
	"\vphoneNumber\x18\x02 \x01(\tR\vphoneNumber\x12\x1e\n" +
	"\n" +
	"verifyCode\x18\x03 \x01(\tR\n" +
	"verifyCode\x12\x18\n" +
	"\aaccount\x18\x04 \x01(\tR\aaccount\x12\x1a\n" +
	"\bpassword\x18\x05 \x01(\tR\bpassword\x12\x1a\n" +
	"\bplatform\x18\x06 \x01(\x05R\bplatform\x12\x1a\n" +
	"\bdeviceID\x18\a \x01(\tR\bdeviceID\x12\x0e\n" +
	"\x02ip\x18\b \x01(\tR\x02ip\x12\x14\n" +
	"\x05email\x18\t \x01(\tR\x05email\x12\x18\n" +
	"\aaddress\x18\n" +
	" \x01(\tR\aaddress\"\xa2\x01\n" +
	"\x10ResetPasswordReq\x12\x1a\n" +
	"\bareaCode\x18\x01 \x01(\tR\bareaCode\x12 \n" +
	"\vphoneNumber\x18\x02 \x01(\tR\vphoneNumber\x12\x1e\n" +
	"\n" +
	"verifyCode\x18\x03 \x01(\tR\n" +
	"verifyCode\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x14\n" +
	"\x05email\x18\x05 \x01(\tR\x05email\"\x13\n" +
	"\x11ResetPasswordResp\"w\n" +
	"\x11ChangePasswordReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12(\n" +
	"\x0fcurrentPassword\x18\x02 \x01(\tR\x0fcurrentPassword\x12 \n" +
	"\vnewPassword\x18\x03 \x01(\tR\vnewPassword\"\x14\n" +
	"\x12ChangePasswordResp\".\n" +
	"\x12FindUserAccountReq\x12\x18\n" +
	"\auserIDs\x18\x01 \x03(\tR\auserIDs\"\xb6\x01\n" +
	"\x13FindUserAccountResp\x12\\\n" +
	"\x0euserAccountMap\x18\x01 \x03(\v24.openim.chat.FindUserAccountResp.UserAccountMapEntryR\x0euserAccountMap\x1aA\n" +
	"\x13UserAccountMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"0\n" +
	"\x12FindAccountUserReq\x12\x1a\n" +
	"\baccounts\x18\x01 \x03(\tR\baccounts\"\xb6\x01\n" +
	"\x13FindAccountUserResp\x12\\\n" +
	"\x0eaccountUserMap\x18\x01 \x03(\v24.openim.chat.FindAccountUserResp.AccountUserMapEntryR\x0eaccountUserMap\x1aA\n" +
	"\x13AccountUserMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xdc\x03\n" +
	"\fSignalRecord\x12\x1a\n" +
	"\bfileName\x18\x01 \x01(\tR\bfileName\x12\x1c\n" +
	"\tmediaType\x18\x02 \x01(\tR\tmediaType\x12\x1a\n" +
	"\broomType\x18\x03 \x01(\tR\broomType\x12\x1a\n" +
	"\bsenderID\x18\x04 \x01(\tR\bsenderID\x12&\n" +
	"\x0esenderNickname\x18\x05 \x01(\tR\x0esenderNickname\x12\x16\n" +
	"\x06recvID\x18\x06 \x01(\tR\x06recvID\x12\"\n" +
	"\frecvNickname\x18\a \x01(\tR\frecvNickname\x12\x18\n" +
	"\agroupID\x18\b \x01(\tR\agroupID\x12\x1c\n" +
	"\tgroupName\x18\t \x01(\tR\tgroupName\x12L\n" +
	"\x0finviterUserList\x18\n" +
	" \x03(\v2\".openim.chat.common.UserPublicInfoR\x0finviterUserList\x12\x1a\n" +
	"\bduration\x18\v \x01(\x05R\bduration\x12\x1e\n" +
	"\n" +
	"createTime\x18\f \x01(\x03R\n" +
	"createTime\x12\x12\n" +
	"\x04size\x18\r \x01(\tR\x04size\x12 \n" +
	"\vdownloadURL\x18\x0e \x01(\tR\vdownloadURL\"A\n" +
	"\x11OpenIMCallbackReq\x12\x18\n" +
	"\acommand\x18\x01 \x01(\tR\acommand\x12\x12\n" +
	"\x04body\x18\x02 \x01(\tR\x04body\"\x14\n" +
	"\x12OpenIMCallbackResp\"\xa4\x01\n" +
	"\x15SearchUserFullInfoReq\x12\x18\n" +
	"\akeyword\x18\x01 \x01(\tR\akeyword\x12?\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1f.openim.sdkws.RequestPaginationR\n" +
	"pagination\x12\x18\n" +
	"\agenders\x18\x03 \x01(\x05R\agenders\x12\x16\n" +
	"\x06normal\x18\x04 \x01(\x05R\x06normal\"f\n" +
	"\x16SearchUserFullInfoResp\x12\x14\n" +
	"\x05total\x18\x01 \x01(\rR\x05total\x126\n" +
	"\x05users\x18\x02 \x03(\v2 .openim.chat.common.UserFullInfoR\x05users\";\n" +
	"\x11UserLoginCountReq\x12\x14\n" +
	"\x05start\x18\x01 \x01(\x03R\x05start\x12\x10\n" +
	"\x03end\x18\x02 \x01(\x03R\x03end\"\xd4\x01\n" +
	"\x12UserLoginCountResp\x12\x1e\n" +
	"\n" +
	"loginCount\x18\x01 \x01(\x03R\n" +
	"loginCount\x12\"\n" +
	"\funloginCount\x18\x02 \x01(\x03R\funloginCount\x12@\n" +
	"\x05count\x18\x03 \x03(\v2*.openim.chat.UserLoginCountResp.CountEntryR\x05count\x1a8\n" +
	"\n" +
	"CountEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\xdd\x01\n" +
	"\tLoginResp\x12\x1c\n" +
	"\tchatToken\x18\x02 \x01(\tR\tchatToken\x12\x16\n" +
	"\x06userID\x18\x03 \x01(\tR\x06userID\x12\x18\n" +
	"\aaccount\x18\x04 \x01(\tR\aaccount\x12\x1a\n" +
	"\bnickName\x18\x05 \x01(\tR\bnickName\x12\x18\n" +
	"\asurName\x18\x06 \x01(\tR\asurName\x12\x12\n" +
	"\x04name\x18\a \x01(\tR\x04name\x12\x18\n" +
	"\afaceUrl\x18\b \x01(\tR\afaceUrl\x12\x1c\n" +
	"\tqrcodeUrl\x18\t \x01(\tR\tqrcodeUrl\"\xa2\x01\n" +
	"\x11SearchUserInfoReq\x12\x18\n" +
	"\akeyword\x18\x01 \x01(\tR\akeyword\x12?\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1f.openim.sdkws.RequestPaginationR\n" +
	"pagination\x12\x18\n" +
	"\agenders\x18\x03 \x03(\x05R\agenders\x12\x18\n" +
	"\auserIDs\x18\x04 \x03(\tR\auserIDs\"b\n" +
	"\x12SearchUserInfoResp\x12\x14\n" +
	"\x05total\x18\x01 \x01(\rR\x05total\x126\n" +
	"\x05users\x18\x02 \x03(\v2 .openim.chat.common.UserFullInfoR\x05users\"L\n" +
	"\x1aGetTokenForVideoMeetingReq\x12\x12\n" +
	"\x04room\x18\x01 \x01(\tR\x04room\x12\x1a\n" +
	"\bidentity\x18\x02 \x01(\tR\bidentity\"Q\n" +
	"\x1bGetTokenForVideoMeetingResp\x12\x1c\n" +
	"\tserverUrl\x18\x01 \x01(\tR\tserverUrl\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\"F\n" +
	"\x11CheckUserExistReq\x121\n" +
	"\x04user\x18\x01 \x01(\v2\x1d.openim.chat.RegisterUserInfoR\x04user\"P\n" +
	"\x12CheckUserExistResp\x12\x16\n" +
	"\x06userid\x18\x01 \x01(\tR\x06userid\x12\"\n" +
	"\fisRegistered\x18\x02 \x01(\bR\fisRegistered\"-\n" +
	"\x11DelUserAccountReq\x12\x18\n" +
	"\auserIDs\x18\x01 \x03(\tR\auserIDs\"\x14\n" +
	"\x12DelUserAccountResp\";\n" +
	"\x13SetAllowRegisterReq\x12$\n" +
	"\rallowRegister\x18\x01 \x01(\bR\rallowRegister\"\x16\n" +
	"\x14SetAllowRegisterResp\"\x15\n" +
	"\x13GetAllowRegisterReq\"<\n" +
	"\x14GetAllowRegisterResp\x12$\n" +
	"\rallowRegister\x18\x01 \x01(\bR\rallowRegister\"-\n" +
	"\x11GetContactListReq\x12\x18\n" +
	"\aUserIDs\x18\x01 \x01(\tR\aUserIDs\"O\n" +
	"\x12GetContactListResp\x129\n" +
	"\x05users\x18\x01 \x03(\v2#.openim.chat.common.ContactFullInfoR\x05users\"P\n" +
	"\x10CreateContactReq\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12$\n" +
	"\rcontactUserId\x18\x02 \x01(\tR\rcontactUserId\"\x13\n" +
	"\x11CreateContactResp\"O\n" +
	"\rDelContactReq\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12&\n" +
	"\x0econtactUserIds\x18\x02 \x03(\tR\x0econtactUserIds\"\x10\n" +
	"\x0eDelContactResp\"L\n" +
	"\fIsContactReq\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12$\n" +
	"\rcontactUserId\x18\x02 \x01(\tR\rcontactUserId\"W\n" +
	"\rIsContactResp\x12(\n" +
	"\x0finUserIdContact\x18\x01 \x01(\x05R\x0finUserIdContact\x12\x1c\n" +
	"\tpublicKey\x18\x02 \x01(\tR\tpublicKey\"O\n" +
	"\x0fBlockContactReq\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12$\n" +
	"\rcontactUserId\x18\x02 \x01(\tR\rcontactUserId\"\x12\n" +
	"\x10BlockContactResp\"N\n" +
	"\x0eCancelBlockReq\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12$\n" +
	"\rcontactUserId\x18\x02 \x01(\tR\rcontactUserId\"\x11\n" +
	"\x0fCancelBlockResp\"\x96\x01\n" +
	"\x10UpdateContactReq\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12$\n" +
	"\rcontactUserId\x18\x02 \x01(\tR\rcontactUserId\x12\x1e\n" +
	"\n" +
	"remarkName\x18\x03 \x01(\tR\n" +
	"remarkName\x12$\n" +
	"\rremarkSurName\x18\x04 \x01(\tR\rremarkSurName\"\x13\n" +
	"\x11UpdateContactResp\"-\n" +
	"\x13BlockContactListReq\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\"P\n" +
	"\x14BlockContactListResp\x128\n" +
	"\x05users\x18\x01 \x03(\v2\".openim.chat.common.UserPublicInfoR\x05users\"\x16\n" +
	"\x14GetAllOnlineUsersReq\"<\n" +
	"\vOnlineUsers\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05value\x18\x02 \x03(\x05R\x05value\"T\n" +
	"\x15GetAllOnlineUsersResp\x12;\n" +
	"\fonline_users\x18\x01 \x03(\v2\x18.openim.chat.OnlineUsersR\vonlineUsers\"\x17\n" +
	"\x15GetAllOfflineUsersReq\"=\n" +
	"\fOfflineUsers\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05value\x18\x02 \x03(\x05R\x05value\"X\n" +
	"\x16GetAllOfflineUsersResp\x12>\n" +
	"\roffline_users\x18\x01 \x03(\v2\x19.openim.chat.OfflineUsersR\fofflineUsers\",\n" +
	"\x10AttributeListReq\x12\x18\n" +
	"\auserIDs\x18\x01 \x03(\tR\auserIDs\"\xb1\b\n" +
	"\tAttribute\x12\x16\n" +
	"\x06UserID\x18\x01 \x01(\tR\x06UserID\x12\x18\n" +
	"\aAccount\x18\x02 \x01(\tR\aAccount\x12 \n" +
	"\vPhoneNumber\x18\x03 \x01(\tR\vPhoneNumber\x12\x1a\n" +
	"\bAreaCode\x18\x04 \x01(\tR\bAreaCode\x12\x14\n" +
	"\x05Email\x18\x05 \x01(\tR\x05Email\x12\x1a\n" +
	"\bNickname\x18\x06 \x01(\tR\bNickname\x12\x18\n" +
	"\aFaceURL\x18\a \x01(\tR\aFaceURL\x12\x16\n" +
	"\x06Gender\x18\b \x01(\tR\x06Gender\x12\x1e\n" +
	"\n" +
	"CreateTime\x18\t \x01(\x05R\n" +
	"CreateTime\x12\x1e\n" +
	"\n" +
	"ChangeTime\x18\n" +
	" \x01(\x05R\n" +
	"ChangeTime\x12\x1c\n" +
	"\tBirthTime\x18\v \x01(\x05R\tBirthTime\x12\x14\n" +
	"\x05Level\x18\f \x01(\x05R\x05Level\x12&\n" +
	"\x0eAllowVibration\x18\r \x01(\x05R\x0eAllowVibration\x12\x1c\n" +
	"\tAllowBeep\x18\x0e \x01(\x05R\tAllowBeep\x12&\n" +
	"\x0eAllowAddFriend\x18\x0f \x01(\x05R\x0eAllowAddFriend\x12*\n" +
	"\x10GlobalRecvMsgOpt\x18\x10 \x01(\x05R\x10GlobalRecvMsgOpt\x12\"\n" +
	"\fRegisterType\x18\x11 \x01(\x05R\fRegisterType\x12\x1c\n" +
	"\tPublicKey\x18\x12 \x01(\tR\tPublicKey\x12\x18\n" +
	"\aAddress\x18\x13 \x01(\tR\aAddress\x12\x18\n" +
	"\aSurname\x18\x14 \x01(\tR\aSurname\x12\x12\n" +
	"\x04Name\x18\x15 \x01(\tR\x04Name\x12\x1c\n" +
	"\tIsContact\x18\x16 \x01(\x05R\tIsContact\x12\x1c\n" +
	"\tIsBlocked\x18\x17 \x01(\x05R\tIsBlocked\x12\"\n" +
	"\fOnlineStatus\x18\x18 \x01(\x05R\fOnlineStatus\x12\x1c\n" +
	"\tOfflineAt\x18\x19 \x01(\x05R\tOfflineAt\x12$\n" +
	"\rAutoDeleteMsg\x18\x1a \x01(\x05R\rAutoDeleteMsg\x12.\n" +
	"\x12AutoDeleteDuration\x18\x1b \x01(\x05R\x12AutoDeleteDuration\x12(\n" +
	"\x0fAllowVoiceCalls\x18\x1c \x01(\x05R\x0fAllowVoiceCalls\x124\n" +
	"\x15AllowGroupInvitations\x18\x1d \x01(\x05R\x15AllowGroupInvitations\x12\x1c\n" +
	"\tQrcodeUrl\x18\x1e \x01(\tR\tQrcodeUrl\x128\n" +
	"\x17AllowViewLastOnlineTime\x18\x1f \x01(\x05R\x17AllowViewLastOnlineTime\x12,\n" +
	"\x11AllowSendMessages\x18  \x01(\x05R\x11AllowSendMessages\"A\n" +
	"\x11AttributeListResp\x12,\n" +
	"\x05users\x18\x01 \x03(\v2\x16.openim.chat.AttributeR\x05users\"6\n" +
	"\x1aGetContactListByUserIdsReq\x12\x18\n" +
	"\aUserIDs\x18\x01 \x01(\tR\aUserIDs\"P\n" +
	"\x1bGetContactListByUserIdsResp\x121\n" +
	"\x05users\x18\x01 \x03(\v2\x1b.openim.chat.common.ContactR\x05users2\xbc\x16\n" +
	"\x04chat\x12Q\n" +
	"\x0eUpdateUserInfo\x12\x1e.openim.chat.UpdateUserInfoReq\x1a\x1f.openim.chat.UpdateUserInfoResp\x12Q\n" +
	"\x0eAddUserAccount\x12\x1e.openim.chat.AddUserAccountReq\x1a\x1f.openim.chat.AddUserAccountResp\x12c\n" +
	"\x14SearchUserPublicInfo\x12$.openim.chat.SearchUserPublicInfoReq\x1a%.openim.chat.SearchUserPublicInfoResp\x12]\n" +
	"\x12FindUserPublicInfo\x12\".openim.chat.FindUserPublicInfoReq\x1a#.openim.chat.FindUserPublicInfoResp\x12]\n" +
	"\x12SearchUserFullInfo\x12\".openim.chat.SearchUserFullInfoReq\x1a#.openim.chat.SearchUserFullInfoResp\x12W\n" +
	"\x10FindUserFullInfo\x12 .openim.chat.FindUserFullInfoReq\x1a!.openim.chat.FindUserFullInfoResp\x12Q\n" +
	"\x0eSendVerifyCode\x12\x1e.openim.chat.SendVerifyCodeReq\x1a\x1f.openim.chat.SendVerifyCodeResp\x12E\n" +
	"\n" +
	"VerifyCode\x12\x1a.openim.chat.VerifyCodeReq\x1a\x1b.openim.chat.VerifyCodeResp\x12K\n" +
	"\fRegisterUser\x12\x1c.openim.chat.RegisterUserReq\x1a\x1d.openim.chat.RegisterUserResp\x126\n" +
	"\x05Login\x12\x15.openim.chat.LoginReq\x1a\x16.openim.chat.LoginResp\x12N\n" +
	"\rResetPassword\x12\x1d.openim.chat.ResetPasswordReq\x1a\x1e.openim.chat.ResetPasswordResp\x12Q\n" +
	"\x0eChangePassword\x12\x1e.openim.chat.ChangePasswordReq\x1a\x1f.openim.chat.ChangePasswordResp\x12Q\n" +
	"\x0eCheckUserExist\x12\x1e.openim.chat.CheckUserExistReq\x1a\x1f.openim.chat.CheckUserExistResp\x12Q\n" +
	"\x0eDelUserAccount\x12\x1e.openim.chat.DelUserAccountReq\x1a\x1f.openim.chat.DelUserAccountResp\x12T\n" +
	"\x0fFindUserAccount\x12\x1f.openim.chat.FindUserAccountReq\x1a .openim.chat.FindUserAccountResp\x12T\n" +
	"\x0fFindAccountUser\x12\x1f.openim.chat.FindAccountUserReq\x1a .openim.chat.FindAccountUserResp\x12Q\n" +
	"\x0eOpenIMCallback\x12\x1e.openim.chat.OpenIMCallbackReq\x1a\x1f.openim.chat.OpenIMCallbackResp\x12Q\n" +
	"\x0eUserLoginCount\x12\x1e.openim.chat.UserLoginCountReq\x1a\x1f.openim.chat.UserLoginCountResp\x12Q\n" +
	"\x0eSearchUserInfo\x12\x1e.openim.chat.SearchUserInfoReq\x1a\x1f.openim.chat.SearchUserInfoResp\x12l\n" +
	"\x17GetTokenForVideoMeeting\x12'.openim.chat.GetTokenForVideoMeetingReq\x1a(.openim.chat.GetTokenForVideoMeetingResp\x12W\n" +
	"\x10SetAllowRegister\x12 .openim.chat.SetAllowRegisterReq\x1a!.openim.chat.SetAllowRegisterResp\x12W\n" +
	"\x10GetAllowRegister\x12 .openim.chat.GetAllowRegisterReq\x1a!.openim.chat.GetAllowRegisterResp\x12Q\n" +
	"\x0eGetContactList\x12\x1e.openim.chat.GetContactListReq\x1a\x1f.openim.chat.GetContactListResp\x12N\n" +
	"\rCreateContact\x12\x1d.openim.chat.CreateContactReq\x1a\x1e.openim.chat.CreateContactResp\x12E\n" +
	"\n" +
	"DelContact\x12\x1a.openim.chat.DelContactReq\x1a\x1b.openim.chat.DelContactResp\x12B\n" +
	"\tIsContact\x12\x19.openim.chat.IsContactReq\x1a\x1a.openim.chat.IsContactResp\x12K\n" +
	"\fBlockContact\x12\x1c.openim.chat.BlockContactReq\x1a\x1d.openim.chat.BlockContactResp\x12H\n" +
	"\vCancelBlock\x12\x1b.openim.chat.CancelBlockReq\x1a\x1c.openim.chat.CancelBlockResp\x12N\n" +
	"\rUpdateContact\x12\x1d.openim.chat.UpdateContactReq\x1a\x1e.openim.chat.UpdateContactResp\x12W\n" +
	"\x10BlockContactList\x12 .openim.chat.BlockContactListReq\x1a!.openim.chat.BlockContactListResp\x12N\n" +
	"\rAttributeList\x12\x1d.openim.chat.AttributeListReq\x1a\x1e.openim.chat.AttributeListResp\x12Z\n" +
	"\x11GetAllOnlineUsers\x12!.openim.chat.GetAllOnlineUsersReq\x1a\".openim.chat.GetAllOnlineUsersResp\x12]\n" +
	"\x12GetAllOfflineUsers\x12\".openim.chat.GetAllOfflineUsersReq\x1a#.openim.chat.GetAllOfflineUsersResp\x12l\n" +
	"\x17GetContactListByUserIds\x12'.openim.chat.GetContactListByUserIdsReq\x1a(.openim.chat.GetContactListByUserIdsRespB-Z+github.com/openimsdk/chat/pkg/protocol/chatb\x06proto3"

var (
	file_chat_chat_proto_rawDescOnce sync.Once
	file_chat_chat_proto_rawDescData []byte
)

func file_chat_chat_proto_rawDescGZIP() []byte {
	file_chat_chat_proto_rawDescOnce.Do(func() {
		file_chat_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chat_chat_proto_rawDesc), len(file_chat_chat_proto_rawDesc)))
	})
	return file_chat_chat_proto_rawDescData
}

var file_chat_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 78)
var file_chat_chat_proto_goTypes = []any{
	(*UserIdentity)(nil),                // 0: openim.chat.UserIdentity
	(*UpdateUserInfoReq)(nil),           // 1: openim.chat.UpdateUserInfoReq
	(*UpdateUserInfoResp)(nil),          // 2: openim.chat.UpdateUserInfoResp
	(*DownloadLinkReq)(nil),             // 3: openim.chat.DownloadLinkReq
	(*FindUserPublicInfoReq)(nil),       // 4: openim.chat.FindUserPublicInfoReq
	(*FindUserPublicInfoResp)(nil),      // 5: openim.chat.FindUserPublicInfoResp
	(*SearchUserPublicInfoReq)(nil),     // 6: openim.chat.SearchUserPublicInfoReq
	(*SearchUserPublicInfoResp)(nil),    // 7: openim.chat.SearchUserPublicInfoResp
	(*FindUserFullInfoReq)(nil),         // 8: openim.chat.FindUserFullInfoReq
	(*FindUserFullInfoResp)(nil),        // 9: openim.chat.FindUserFullInfoResp
	(*SendVerifyCodeReq)(nil),           // 10: openim.chat.SendVerifyCodeReq
	(*SendVerifyCodeResp)(nil),          // 11: openim.chat.SendVerifyCodeResp
	(*VerifyCodeReq)(nil),               // 12: openim.chat.VerifyCodeReq
	(*VerifyCodeResp)(nil),              // 13: openim.chat.VerifyCodeResp
	(*RegisterUserInfo)(nil),            // 14: openim.chat.RegisterUserInfo
	(*RegisterUserReq)(nil),             // 15: openim.chat.RegisterUserReq
	(*RegisterUserResp)(nil),            // 16: openim.chat.RegisterUserResp
	(*AddUserAccountReq)(nil),           // 17: openim.chat.AddUserAccountReq
	(*AddUserAccountResp)(nil),          // 18: openim.chat.AddUserAccountResp
	(*LoginReq)(nil),                    // 19: openim.chat.LoginReq
	(*ResetPasswordReq)(nil),            // 20: openim.chat.ResetPasswordReq
	(*ResetPasswordResp)(nil),           // 21: openim.chat.ResetPasswordResp
	(*ChangePasswordReq)(nil),           // 22: openim.chat.ChangePasswordReq
	(*ChangePasswordResp)(nil),          // 23: openim.chat.ChangePasswordResp
	(*FindUserAccountReq)(nil),          // 24: openim.chat.FindUserAccountReq
	(*FindUserAccountResp)(nil),         // 25: openim.chat.FindUserAccountResp
	(*FindAccountUserReq)(nil),          // 26: openim.chat.FindAccountUserReq
	(*FindAccountUserResp)(nil),         // 27: openim.chat.FindAccountUserResp
	(*SignalRecord)(nil),                // 28: openim.chat.SignalRecord
	(*OpenIMCallbackReq)(nil),           // 29: openim.chat.OpenIMCallbackReq
	(*OpenIMCallbackResp)(nil),          // 30: openim.chat.OpenIMCallbackResp
	(*SearchUserFullInfoReq)(nil),       // 31: openim.chat.SearchUserFullInfoReq
	(*SearchUserFullInfoResp)(nil),      // 32: openim.chat.SearchUserFullInfoResp
	(*UserLoginCountReq)(nil),           // 33: openim.chat.UserLoginCountReq
	(*UserLoginCountResp)(nil),          // 34: openim.chat.UserLoginCountResp
	(*LoginResp)(nil),                   // 35: openim.chat.LoginResp
	(*SearchUserInfoReq)(nil),           // 36: openim.chat.SearchUserInfoReq
	(*SearchUserInfoResp)(nil),          // 37: openim.chat.SearchUserInfoResp
	(*GetTokenForVideoMeetingReq)(nil),  // 38: openim.chat.GetTokenForVideoMeetingReq
	(*GetTokenForVideoMeetingResp)(nil), // 39: openim.chat.GetTokenForVideoMeetingResp
	(*CheckUserExistReq)(nil),           // 40: openim.chat.CheckUserExistReq
	(*CheckUserExistResp)(nil),          // 41: openim.chat.CheckUserExistResp
	(*DelUserAccountReq)(nil),           // 42: openim.chat.DelUserAccountReq
	(*DelUserAccountResp)(nil),          // 43: openim.chat.DelUserAccountResp
	(*SetAllowRegisterReq)(nil),         // 44: openim.chat.SetAllowRegisterReq
	(*SetAllowRegisterResp)(nil),        // 45: openim.chat.SetAllowRegisterResp
	(*GetAllowRegisterReq)(nil),         // 46: openim.chat.GetAllowRegisterReq
	(*GetAllowRegisterResp)(nil),        // 47: openim.chat.GetAllowRegisterResp
	(*GetContactListReq)(nil),           // 48: openim.chat.GetContactListReq
	(*GetContactListResp)(nil),          // 49: openim.chat.GetContactListResp
	(*CreateContactReq)(nil),            // 50: openim.chat.CreateContactReq
	(*CreateContactResp)(nil),           // 51: openim.chat.CreateContactResp
	(*DelContactReq)(nil),               // 52: openim.chat.DelContactReq
	(*DelContactResp)(nil),              // 53: openim.chat.DelContactResp
	(*IsContactReq)(nil),                // 54: openim.chat.IsContactReq
	(*IsContactResp)(nil),               // 55: openim.chat.IsContactResp
	(*BlockContactReq)(nil),             // 56: openim.chat.BlockContactReq
	(*BlockContactResp)(nil),            // 57: openim.chat.BlockContactResp
	(*CancelBlockReq)(nil),              // 58: openim.chat.CancelBlockReq
	(*CancelBlockResp)(nil),             // 59: openim.chat.CancelBlockResp
	(*UpdateContactReq)(nil),            // 60: openim.chat.UpdateContactReq
	(*UpdateContactResp)(nil),           // 61: openim.chat.UpdateContactResp
	(*BlockContactListReq)(nil),         // 62: openim.chat.BlockContactListReq
	(*BlockContactListResp)(nil),        // 63: openim.chat.BlockContactListResp
	(*GetAllOnlineUsersReq)(nil),        // 64: openim.chat.GetAllOnlineUsersReq
	(*OnlineUsers)(nil),                 // 65: openim.chat.OnlineUsers
	(*GetAllOnlineUsersResp)(nil),       // 66: openim.chat.GetAllOnlineUsersResp
	(*GetAllOfflineUsersReq)(nil),       // 67: openim.chat.GetAllOfflineUsersReq
	(*OfflineUsers)(nil),                // 68: openim.chat.OfflineUsers
	(*GetAllOfflineUsersResp)(nil),      // 69: openim.chat.GetAllOfflineUsersResp
	(*AttributeListReq)(nil),            // 70: openim.chat.AttributeListReq
	(*Attribute)(nil),                   // 71: openim.chat.Attribute
	(*AttributeListResp)(nil),           // 72: openim.chat.AttributeListResp
	(*GetContactListByUserIdsReq)(nil),  // 73: openim.chat.GetContactListByUserIdsReq
	(*GetContactListByUserIdsResp)(nil), // 74: openim.chat.GetContactListByUserIdsResp
	nil,                                 // 75: openim.chat.FindUserAccountResp.UserAccountMapEntry
	nil,                                 // 76: openim.chat.FindAccountUserResp.AccountUserMapEntry
	nil,                                 // 77: openim.chat.UserLoginCountResp.CountEntry
	(*wrapperspb.StringValue)(nil),      // 78: openim.protobuf.StringValue
	(*wrapperspb.Int32Value)(nil),       // 79: openim.protobuf.Int32Value
	(*wrapperspb.Int64Value)(nil),       // 80: openim.protobuf.Int64Value
	(*common.UserPublicInfo)(nil),       // 81: openim.chat.common.UserPublicInfo
	(*sdkws.RequestPagination)(nil),     // 82: openim.sdkws.RequestPagination
	(*common.UserFullInfo)(nil),         // 83: openim.chat.common.UserFullInfo
	(*common.ContactFullInfo)(nil),      // 84: openim.chat.common.ContactFullInfo
	(*common.Contact)(nil),              // 85: openim.chat.common.Contact
}
var file_chat_chat_proto_depIdxs = []int32{
	78, // 0: openim.chat.UpdateUserInfoReq.account:type_name -> openim.protobuf.StringValue
	78, // 1: openim.chat.UpdateUserInfoReq.phoneNumber:type_name -> openim.protobuf.StringValue
	78, // 2: openim.chat.UpdateUserInfoReq.areaCode:type_name -> openim.protobuf.StringValue
	78, // 3: openim.chat.UpdateUserInfoReq.email:type_name -> openim.protobuf.StringValue
	78, // 4: openim.chat.UpdateUserInfoReq.nickname:type_name -> openim.protobuf.StringValue
	78, // 5: openim.chat.UpdateUserInfoReq.faceURL:type_name -> openim.protobuf.StringValue
	79, // 6: openim.chat.UpdateUserInfoReq.gender:type_name -> openim.protobuf.Int32Value
	79, // 7: openim.chat.UpdateUserInfoReq.level:type_name -> openim.protobuf.Int32Value
	80, // 8: openim.chat.UpdateUserInfoReq.birth:type_name -> openim.protobuf.Int64Value
	79, // 9: openim.chat.UpdateUserInfoReq.allowAddFriend:type_name -> openim.protobuf.Int32Value
	79, // 10: openim.chat.UpdateUserInfoReq.allowBeep:type_name -> openim.protobuf.Int32Value
	79, // 11: openim.chat.UpdateUserInfoReq.allowVibration:type_name -> openim.protobuf.Int32Value
	79, // 12: openim.chat.UpdateUserInfoReq.globalRecvMsgOpt:type_name -> openim.protobuf.Int32Value
	79, // 13: openim.chat.UpdateUserInfoReq.RegisterType:type_name -> openim.protobuf.Int32Value
	78, // 14: openim.chat.UpdateUserInfoReq.name:type_name -> openim.protobuf.StringValue
	78, // 15: openim.chat.UpdateUserInfoReq.surname:type_name -> openim.protobuf.StringValue
	81, // 16: openim.chat.FindUserPublicInfoResp.users:type_name -> openim.chat.common.UserPublicInfo
	82, // 17: openim.chat.SearchUserPublicInfoReq.pagination:type_name -> openim.sdkws.RequestPagination
	81, // 18: openim.chat.SearchUserPublicInfoResp.users:type_name -> openim.chat.common.UserPublicInfo
	83, // 19: openim.chat.FindUserFullInfoResp.users:type_name -> openim.chat.common.UserFullInfo
	14, // 20: openim.chat.RegisterUserReq.user:type_name -> openim.chat.RegisterUserInfo
	14, // 21: openim.chat.AddUserAccountReq.user:type_name -> openim.chat.RegisterUserInfo
	75, // 22: openim.chat.FindUserAccountResp.userAccountMap:type_name -> openim.chat.FindUserAccountResp.UserAccountMapEntry
	76, // 23: openim.chat.FindAccountUserResp.accountUserMap:type_name -> openim.chat.FindAccountUserResp.AccountUserMapEntry
	81, // 24: openim.chat.SignalRecord.inviterUserList:type_name -> openim.chat.common.UserPublicInfo
	82, // 25: openim.chat.SearchUserFullInfoReq.pagination:type_name -> openim.sdkws.RequestPagination
	83, // 26: openim.chat.SearchUserFullInfoResp.users:type_name -> openim.chat.common.UserFullInfo
	77, // 27: openim.chat.UserLoginCountResp.count:type_name -> openim.chat.UserLoginCountResp.CountEntry
	82, // 28: openim.chat.SearchUserInfoReq.pagination:type_name -> openim.sdkws.RequestPagination
	83, // 29: openim.chat.SearchUserInfoResp.users:type_name -> openim.chat.common.UserFullInfo
	14, // 30: openim.chat.CheckUserExistReq.user:type_name -> openim.chat.RegisterUserInfo
	84, // 31: openim.chat.GetContactListResp.users:type_name -> openim.chat.common.ContactFullInfo
	81, // 32: openim.chat.BlockContactListResp.users:type_name -> openim.chat.common.UserPublicInfo
	65, // 33: openim.chat.GetAllOnlineUsersResp.online_users:type_name -> openim.chat.OnlineUsers
	68, // 34: openim.chat.GetAllOfflineUsersResp.offline_users:type_name -> openim.chat.OfflineUsers
	71, // 35: openim.chat.AttributeListResp.users:type_name -> openim.chat.Attribute
	85, // 36: openim.chat.GetContactListByUserIdsResp.users:type_name -> openim.chat.common.Contact
	1,  // 37: openim.chat.chat.UpdateUserInfo:input_type -> openim.chat.UpdateUserInfoReq
	17, // 38: openim.chat.chat.AddUserAccount:input_type -> openim.chat.AddUserAccountReq
	6,  // 39: openim.chat.chat.SearchUserPublicInfo:input_type -> openim.chat.SearchUserPublicInfoReq
	4,  // 40: openim.chat.chat.FindUserPublicInfo:input_type -> openim.chat.FindUserPublicInfoReq
	31, // 41: openim.chat.chat.SearchUserFullInfo:input_type -> openim.chat.SearchUserFullInfoReq
	8,  // 42: openim.chat.chat.FindUserFullInfo:input_type -> openim.chat.FindUserFullInfoReq
	10, // 43: openim.chat.chat.SendVerifyCode:input_type -> openim.chat.SendVerifyCodeReq
	12, // 44: openim.chat.chat.VerifyCode:input_type -> openim.chat.VerifyCodeReq
	15, // 45: openim.chat.chat.RegisterUser:input_type -> openim.chat.RegisterUserReq
	19, // 46: openim.chat.chat.Login:input_type -> openim.chat.LoginReq
	20, // 47: openim.chat.chat.ResetPassword:input_type -> openim.chat.ResetPasswordReq
	22, // 48: openim.chat.chat.ChangePassword:input_type -> openim.chat.ChangePasswordReq
	40, // 49: openim.chat.chat.CheckUserExist:input_type -> openim.chat.CheckUserExistReq
	42, // 50: openim.chat.chat.DelUserAccount:input_type -> openim.chat.DelUserAccountReq
	24, // 51: openim.chat.chat.FindUserAccount:input_type -> openim.chat.FindUserAccountReq
	26, // 52: openim.chat.chat.FindAccountUser:input_type -> openim.chat.FindAccountUserReq
	29, // 53: openim.chat.chat.OpenIMCallback:input_type -> openim.chat.OpenIMCallbackReq
	33, // 54: openim.chat.chat.UserLoginCount:input_type -> openim.chat.UserLoginCountReq
	36, // 55: openim.chat.chat.SearchUserInfo:input_type -> openim.chat.SearchUserInfoReq
	38, // 56: openim.chat.chat.GetTokenForVideoMeeting:input_type -> openim.chat.GetTokenForVideoMeetingReq
	44, // 57: openim.chat.chat.SetAllowRegister:input_type -> openim.chat.SetAllowRegisterReq
	46, // 58: openim.chat.chat.GetAllowRegister:input_type -> openim.chat.GetAllowRegisterReq
	48, // 59: openim.chat.chat.GetContactList:input_type -> openim.chat.GetContactListReq
	50, // 60: openim.chat.chat.CreateContact:input_type -> openim.chat.CreateContactReq
	52, // 61: openim.chat.chat.DelContact:input_type -> openim.chat.DelContactReq
	54, // 62: openim.chat.chat.IsContact:input_type -> openim.chat.IsContactReq
	56, // 63: openim.chat.chat.BlockContact:input_type -> openim.chat.BlockContactReq
	58, // 64: openim.chat.chat.CancelBlock:input_type -> openim.chat.CancelBlockReq
	60, // 65: openim.chat.chat.UpdateContact:input_type -> openim.chat.UpdateContactReq
	62, // 66: openim.chat.chat.BlockContactList:input_type -> openim.chat.BlockContactListReq
	70, // 67: openim.chat.chat.AttributeList:input_type -> openim.chat.AttributeListReq
	64, // 68: openim.chat.chat.GetAllOnlineUsers:input_type -> openim.chat.GetAllOnlineUsersReq
	67, // 69: openim.chat.chat.GetAllOfflineUsers:input_type -> openim.chat.GetAllOfflineUsersReq
	73, // 70: openim.chat.chat.GetContactListByUserIds:input_type -> openim.chat.GetContactListByUserIdsReq
	2,  // 71: openim.chat.chat.UpdateUserInfo:output_type -> openim.chat.UpdateUserInfoResp
	18, // 72: openim.chat.chat.AddUserAccount:output_type -> openim.chat.AddUserAccountResp
	7,  // 73: openim.chat.chat.SearchUserPublicInfo:output_type -> openim.chat.SearchUserPublicInfoResp
	5,  // 74: openim.chat.chat.FindUserPublicInfo:output_type -> openim.chat.FindUserPublicInfoResp
	32, // 75: openim.chat.chat.SearchUserFullInfo:output_type -> openim.chat.SearchUserFullInfoResp
	9,  // 76: openim.chat.chat.FindUserFullInfo:output_type -> openim.chat.FindUserFullInfoResp
	11, // 77: openim.chat.chat.SendVerifyCode:output_type -> openim.chat.SendVerifyCodeResp
	13, // 78: openim.chat.chat.VerifyCode:output_type -> openim.chat.VerifyCodeResp
	16, // 79: openim.chat.chat.RegisterUser:output_type -> openim.chat.RegisterUserResp
	35, // 80: openim.chat.chat.Login:output_type -> openim.chat.LoginResp
	21, // 81: openim.chat.chat.ResetPassword:output_type -> openim.chat.ResetPasswordResp
	23, // 82: openim.chat.chat.ChangePassword:output_type -> openim.chat.ChangePasswordResp
	41, // 83: openim.chat.chat.CheckUserExist:output_type -> openim.chat.CheckUserExistResp
	43, // 84: openim.chat.chat.DelUserAccount:output_type -> openim.chat.DelUserAccountResp
	25, // 85: openim.chat.chat.FindUserAccount:output_type -> openim.chat.FindUserAccountResp
	27, // 86: openim.chat.chat.FindAccountUser:output_type -> openim.chat.FindAccountUserResp
	30, // 87: openim.chat.chat.OpenIMCallback:output_type -> openim.chat.OpenIMCallbackResp
	34, // 88: openim.chat.chat.UserLoginCount:output_type -> openim.chat.UserLoginCountResp
	37, // 89: openim.chat.chat.SearchUserInfo:output_type -> openim.chat.SearchUserInfoResp
	39, // 90: openim.chat.chat.GetTokenForVideoMeeting:output_type -> openim.chat.GetTokenForVideoMeetingResp
	45, // 91: openim.chat.chat.SetAllowRegister:output_type -> openim.chat.SetAllowRegisterResp
	47, // 92: openim.chat.chat.GetAllowRegister:output_type -> openim.chat.GetAllowRegisterResp
	49, // 93: openim.chat.chat.GetContactList:output_type -> openim.chat.GetContactListResp
	51, // 94: openim.chat.chat.CreateContact:output_type -> openim.chat.CreateContactResp
	53, // 95: openim.chat.chat.DelContact:output_type -> openim.chat.DelContactResp
	55, // 96: openim.chat.chat.IsContact:output_type -> openim.chat.IsContactResp
	57, // 97: openim.chat.chat.BlockContact:output_type -> openim.chat.BlockContactResp
	59, // 98: openim.chat.chat.CancelBlock:output_type -> openim.chat.CancelBlockResp
	61, // 99: openim.chat.chat.UpdateContact:output_type -> openim.chat.UpdateContactResp
	63, // 100: openim.chat.chat.BlockContactList:output_type -> openim.chat.BlockContactListResp
	72, // 101: openim.chat.chat.AttributeList:output_type -> openim.chat.AttributeListResp
	66, // 102: openim.chat.chat.GetAllOnlineUsers:output_type -> openim.chat.GetAllOnlineUsersResp
	69, // 103: openim.chat.chat.GetAllOfflineUsers:output_type -> openim.chat.GetAllOfflineUsersResp
	74, // 104: openim.chat.chat.GetContactListByUserIds:output_type -> openim.chat.GetContactListByUserIdsResp
	71, // [71:105] is the sub-list for method output_type
	37, // [37:71] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_chat_chat_proto_init() }
func file_chat_chat_proto_init() {
	if File_chat_chat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chat_chat_proto_rawDesc), len(file_chat_chat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   78,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_chat_proto_goTypes,
		DependencyIndexes: file_chat_chat_proto_depIdxs,
		MessageInfos:      file_chat_chat_proto_msgTypes,
	}.Build()
	File_chat_chat_proto = out.File
	file_chat_chat_proto_goTypes = nil
	file_chat_chat_proto_depIdxs = nil
}
